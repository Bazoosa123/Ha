gg.alert("hallo this is sneak preview")
os
version_name = "1.43.1.107272" 
version_code = 1048000

function show() if not gg.isVisible()then gg.setVisible(true) end end
function hide()if gg.isVisible()then gg.setVisible(true) end end 
function new_search(text, flag, encrypted, sign, memoryFrom, memoryTo, limit)if flag == nil then flag = gg.TYPE_AUTO end if encrypted == nil then  encrypted = false end if sign == nil then sign = gg.SIGN_EQUAL end if memoryFrom == nil  then memoryFrom = 0 end if memoryTo == nil then memoryTo = -1 end if limit == nil then limit = 0 end hide()gg.clearResults() gg.searchNumber(text, flag, encrypted, sign, memoryFrom, memoryTo, limit) end
function get_results(maxCount, skip, addressMin, addressMax, valueMin, valueMax, flag, fractional, pointer)if skip == nil then skip = 0 end local results, count_results = gg.getResults(maxCount, skip, addressMin, addressMax, valueMin, valueMax, flag, fractional, pointer),gg.getResultsCount() return results, count_results end 

function findItemsParentPointer() 
if not count_items_parent_pointer then   
local count_items_parent_pointer = 55
local results, count_results 
if informations.x64 then
local items_root_pointer_constant = "-2999674699455132672"
local items_root_pointer_position = 4
 new_search(items_root_pointer_constant, gg.TYPE_QWORD)
 results, count_results = get_results(1, items_root_pointer_position - 1) 
if count_results >= items_root_pointer_position 
then
 new_search(results[1].address,  gg.TYPE_QWORD) results, count_results = get_results(count_items_parent_pointer) 
if count_results == count_items_parent_pointer 
then parent_pointers.items = results 
else gg.alert("Error: Items parent pointer was not found", "OK") 
os.exit() 
end 
else gg.alert("Error: Items root pointer was not found", "OK") 
os.exit()
end
else 
local items_root_pointer_constant =" -2220275583104843760"
local  items_root_pointer_position = 37
new_search(items_root_pointer_constant, gg.TYPE_QWORD) results, count_results = get_results(1, items_root_pointer_position - 1)
if count_results >= items_root_pointer_position
 then new_search(results[1].address, gg.TYPE_DWORD) 
results, count_results = get_results(count_items_parent_pointer) 
 if count_results == count_items_parent_pointer 
 then parent_pointers.items = results
 else gg.alert("Error: Items parent pointer was not found", "OK") 
 os.exit()
end
else gg.alert("Error: Items root pointer was not found", "OK")
os.exit()
end 
end 
end 
end 

 function verify() if informations then local origin_package, cloning_package, origin_package_length = "com.ea.game.simcitymobile_row", "com.ea.game.simcitymobile_ro", string.len(informations.cmdLine) if informations.cmdLine == origin_package then if informations.versionCode == version_code then return USE_ORIGIN_VERSION
 elseif informations.versionCode > version_code then 
return USE_HIGHER_VERSION else return USE_UNAUTHORIZED_VERSION 
end 
elseif string.find(informations.cmdLine, cloning_package) 
and
 origin_package_length == 29 
then return USE_CLONING_VERSION else 
return USE_UNAUTHORIZED_PACKAGE 
end
else 
return USE_NO_PROCCESS 
end 
end 
 
function min()
parent_pointers = {} 
production_times_pointer = {} 
war_card_pointer = {} 
common_items_pointer = {}
omega_part_pointer = {}
golden_ticket_pointer = {} 
war_booster_pointer = {} 
war_part_pointer = {} 
expansion_certificates_pointer = {} 
building_items_pointer = {}
rare_items_pointer = {}
speed_pointer = {}
pointers = {}
POPULATION_items_pointer ={}

informations = gg.getTargetInfo() USE_ORIGIN_VERSION = 200 USE_HIGHER_VERSION = 203 USE_UNAUTHORIZED_VERSION = 70 USE_CLONING_VERSION = 50 USE_UNAUTHORIZED_PACKAGE = 400 USE_NO_PROCCESS = 404 local verification_code = verify() local is_higher_version = verification_code == USE_HIGHER_VERSION if verification_code == USE_ORIGIN_VERSION or is_higher_version or verification_code == USE_CLONING_VERSION then if is_higher_version then gg.alert("Error: The script can only be run on SimCity BuildIt version " .. version_name .. "") gg.setVisible(true)os.exit() end elseif verification_code == USE_UNAUTHORIZED_VERSION then gg.alert("Error: The script can only be run on SimCity BuildIt version " .. version_name .. "")  gg.setVisible(true) os.exit() elseif verification_code == USE_UNAUTHORIZED_PACKAGE then gg.alert("Error: The script can only be run in the SimCity BuildIt app") gg.setVisible(true) os.exit() elseif verification_code == USE_NO_PROCCESS then gg.alert("Error: No process selected") gg.setVisible(true) os.exit() Next_Level() GetResources() else gg.alert("Error: Failed to verify your GameGuardian")  gg.setVisible(true) os.exit() end end 

--COUNTER FOR ROOT POINTERS
boostercounter=39
omega_counter=10
normal_counter=117
warcardcounter=24
warpartscounter=13
Building_counts=1757

--WAR CARDS CONSTANT OFFSET
offset_warcards64bit =0x50
offset_warcards32bit =0x2C

--WAR BOOSTERS CONSTANT OFFSET
offset_boosters64bit=0x50
offset_boosters32bit=0x2C

--WAR PARTS OFFSET
offset_warparts64bit=0x50
offset_warparts32bit=0x2C

--OMEGA PART OFFSET
offset_omega64bit=0x50
offset_omega32bit=0x2C 

--NORMAL PART PRODUCTION
offset_normal_parts_64bit=0x50
offset_normal_parts_32bit=0x2C

--SPEED TOKENS
offset_speed_token_64bit=0x50
offset_speed_token_32bit=0x2C

--RARE PARTS
offset_rare_parts_64bit=0x50
offset_rare_parts_32bit=0x2C



 --LEVEL UPGRADE
Offset_FREEZE_GET_RESOURCES_LEVEL64_ONE=0x60
Offset_FREEZE_GET_RESOURCES_LEVEL_64_TWO=0x64
Offset_FREEZE_GET_RESOURCES_LEVEL_32_ONE=0x48
Offset_FREEZE_GET_RESOURCES_LEVEL_32_TWO=0x4C
Offset_Next_Level_64=0x10
Offset_Next_Level_32=0x8
 
--NORMAL PART DOUBLE CHECK FOR NEW PARTS
normal_part_check_list_counter=3
offset_normal_part_checklist64=0x20
offset_normal_part_checklist32=0x14

--AIRPORT
offset_airport_64_bit=0x50
offset_airport_32_bit=0x2C

--RESIDENTIAL BUILDINGS
Offset_residentual_one_64=0x124
Offset_residentual_one_32=0xC0
Offset_residentual_two_64=0x124
Offset_residentual_two_32=0xC0
Offset_residentual_four_64=0x128
Offset_residentual_four_32=0xC4
Offset_residentual_five_64=0x4
Offset_residentual_five_32=0x4

--GOLDEN TICKETS
offset_golden_tickets_64bit=0x50
offset_golden_tickets_32bit=0x2C
 
 --CERTIFICATE
 offset_certificate_64bit=0x50
 offset_certificate_32bit=0x2C
 
 --BUILDING CHECKER COUNTER
Buildings_checker_counter_one_64=0x120
Buildings_checker_counter_one_32=0xBC
Buildings_checker_counter_two_64=0x120
Buildings_checker_counter_two_32=0xBC
specificationx32=0x228
specificationx64=0x318 

 --BUILDINGS
offset_buildings_64bit=0x50
offset_buildings_32bit=0x2C

 --ZERO TIMERS
 
 offset_timers_64_bit=0x9C
 offset_timers_64_1=0x1a8
 offset_timers_64_2=0x1b0
 offset_timers_64_3=0x1b8
 offset_timers_32_bit=0x74
 offset_timers_32_1=0x158
offset_timers_32_2=0x15c
offset_timers_32_4=0x160

  --BUILDING OFFSET 50
offset_warcard_level_building_reduce_64bit_1 = 0x338
offset_warcard_level_building_reduce_64bit_2 = 0x340
offset_warcard_level_building_reduce_64bit_3 = 0x348
offset_warcard_level_building_reduce_32bit_1 = 0x238
offset_warcard_level_building_reduce_32bit_2 = 0x23C
offset_warcard_level_building_reduce_32bit_3= 0x240

--WAR CARD LEVEL 
offset_warcard_level_reduce_64_1 = 0x2C8
offset_warcard_level_reduce_64_2 = 0x2D0
offset_warcard_level_reduce_64_3 = 0x2D8
offset_warcard_level_reduce_32_1 = 0x1F8
offset_warcard_level_reduce_32_2 = 0x1FC
offset_warcard_level_reduce_32_3 = 0x200

--WAR CARDS CONSTANT OFFSET REDUCE
offset_warcards_constant_64bit_1=0x50
offset_warcards_constant_32bit_1 =0x2C
REVERT_WARCARD64=0X2E8
REVERT_WARCARD32=0X20C
NEXT_VALUE_FOR_WARCARD32=0x4
NEXT_VALUE_FOR_WARCARD32x64=0x8
NEXT_VALUE_FOR_WARCARD64=0x10
 SPECIFICATION_LAKE= 1092744876
 
-- POPULATION 
population_boost = 1130306404
offset_population_64bit = 0x50
offset_population_32bit = 0x2C

--freeze parts or stuff none simcash or coins or to unlimited storage 
constant_All_64_1 = 0x18
constant_All_64_2 = 0x1C
constant_All_64_3 = 0x20
constant_All_64_4 = 0x24

constant_All_32_1 = 0x18
constant_All_32_2 = 0x1C
constant_All_32_3 = 0x20
constant_All_32_4 = 0x24


--BEACH

VOLLEYBALL_COURT=764118735;
MERMAN_STATUE=813308529;
CAROUSEL=-295480250;
WATER_PARK=19878764;
BLUEBEARDS_PIRATE_SHIP=1799705683;
AQUARIUM=-517430528;
LIGHTHOUSE=-1975436265;
LIFEGUARD_TOWER=291034576;
RELAXING_BEACH=1334269703;
SURFER_BEACH=-1683144483;
SAILORMANS_PIER=-843379253;
LUXURY_BOAT_MARINA=1962202416;
ASTRO_TWIRL_ROCKET_RIDE=2026792156;
BEACHFRONT_SHOPPING_MALL=1106695477;
CRESCENT_SHOPPING_MALL=1573651112;
BICYCLE_MOTOCROSS_CENTER=-1187429907;
ROWING_CENTER=-1388487448;
BEACH_VOLLEYBALL_CENTER=-1524261240;
WATERFRONT_WHARF=-1869089609;
YACHT_CLUB=-1417405073;
BOAT_HOUSE=464006328;
LUXURY_BEACH_HOUSE=-2038081014;
OCEAN_VILLA=1685276410;
SAILING_CLUB=203311611;
GUARDIAN_OF_SAILORS=1893805226;
BEACH_DELTA=1010574017;
PARADISE_ISLAND=1047022577;
LUXURY_BEACH_HOTEL=-246355115;
SAILING_BOAT_PIER=295398699;
ROYAL_RESORT=1696366774;
LUXURY_MALL=-1504571536;
LUXURY_CRUISE_SHIP=1730432937;
LIGHTHOUSE_OF_SIMCITY=-1891082744;
BEACH_THEATRE=300574244;
COLOSSAL_SANDCASTLE=1364033785;
ISLE_OF_WIGHT_THE_NEEDLES=1349768007;
PIER_SHOPPING_AREA=1373299444;
SEA_FIREFLIES=-137548074;
SEA_LIONS_CENTER=-1941621566;
HARBOR_MARKETPLACE=1167198283;
BEACH_TORII=1029914302;
BEACH_SPORTS_RENTAL=-1022328473;
SEASHORE_SAUNA_RESORT=1532060468;
BEACH_WATERFALL=-1449629287;
PEBBLE_CLIFFS=-365044955;
LAGOON_RETREAT=1502934459;
SEASIDE_SOIREE=1941374121;
ISLAND_PARTY=-1468355025;
HIDDEN_LAGOON=2030134544;
ENTERTAINMENT_BOARDWALK=-238866695;
THE_FLYING_DUTCHMAN=-492173631;
GHOST_FORTRESS=-401195743;
THE_KRAKEN=632880417;
SIRENS_CALL=1762731124;
SUNKEN_VILLAGE=-2127049860;
EASTEGG_ISLAND=-1120214884;
LEVEL_1_BLUE_OCEAN_STADIUM=1612699702;
LEVEL_2_BLUE_OCEAN_STADIUM=1612699703;
LEVEL_3_BLUE_OCEAN_STADIUM=1612699704;
WHALE_WATCHING_TOWER=-1177473833;
DOLPHIN_WATCHING_BOAT=-415542704;
CORAL_REEF=-905879128;
BEACH_WEDDING=2013586058;
SANTA_BEACH_PARTY=994100769;
DOLPHIN_ISLAND=394421861;
BEACH_SAUNA_BAR=-121780645;
NORDIC_FISHING_DOCK=-1582890451;
PARTY_ISLAND_2022=319698076;
OKINAWA_BEACH=-1578309862;
PALACE_PIER=772540084;
BAGA_BEACH=759087700
OCEANIC_GARDEN=-1556544495

function seven(table)local i = 0 for pointer in pairs(table) do i = i + 1 end return i end
function eigth()gg.setVisible(true)if n~=nil
 then gg.setValues(n)
end
gg.showUiButton() while true do if gg.isClickedUiButton() then gg.hideUiButton()gg.setVisible(false)break end gg.sleep(100) end end
min()
function Mainmenu()  
local zz = {"1. BEACH  NAMES","2.  BEACH CHECKER ";"3.BEACH INSTANT CHANGE","4. TIMERS","5. PRODUCTION","6. GAME GUARDIAN","7.EXIT"} 
local z = gg.multiChoice(zz, nil,"Mainmenu") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then beach_names()
end 
if z[2] then BEACH_ALL()
end
if z[3] then beach_transform()
end 
if z[4] then execute_alter_production_times()
end 
if z[5] then Production_submenu()
end 
if z[6] then main()
end 
if z[7] then exit() 
end
end 
end
end

 
function beach_checker() 
Buildings_checker_counter_one()
gg.refineNumber("39")  
Buildings_checker_counter_two()
BEACH_ALL()
gg.clearResults()
gg.toast("Successfully ") 
end

function beach_names()   
local zz = {
"1. VOLLEYBALL COURT",
"2. MERMAN STATUE",
"3. CAROUSEL",
"4. WATER PARK",
"5. BLUEBEARDS PIRATE SHIP",
"6. AQUARIUM",
"7. LIGHTHOUSE",
"8. LIFEGUARD TOWER",
"9. RELAXING BEACH",
"10. SURFER BEACH",
"11. SAILORMANS PIER",
"12. LUXURY BOAT MARINA",
"13. ASTRO TWIRL ROCKET RIDE",
"14. BEACHFRONT SHOPPING MALL",
"15. CRESCENT SHOPPING MALL",
"16. BICYCLE MOTOCROSS CENTER",
"17. ROWING CENTER",
"18. BEACH VOLLEYBALL CENTER",
"19. WATERFRONT WHARF",
"20. YACHT CLUB",
"21. BOAT HOUSE",
"22. LUXURY BEACH HOUSE",
"23. OCEAN VILLA",
"24. SAILING CLUB",
"25. GUARDIAN OF SAILORS",
"26. BEACH DELTA",
"27. PARADISE ISLAND",
"28. LUXURY BEACH HOTEL",
"29. SAILING BOAT PIER",
"30. ROYAL RESORT",
"31. LUXURY MALL",
"32. LUXURY CRUISE SHIP",
"33. LIGHTHOUSE OF SIMCITY",
"34. BEACH THEATRE",
"35. COLOSSAL SANDCASTLE",
"36. ISLE OF WIGHT THE NEEDLES",
"37. PIER SHOPPING AREA",
"38. SEA FIREFLIES",
"39. SEA LIONS CENTER",
"40. HARBOR MARKET PLACE",
"41. BEACH TORII",
"42. BEACH SPORTS RENTAL",
"43. SEASHORE SAUNA RESORT",
"44. BEACH WATERFALL",
"45. PEBBLE CLIFFS",
"46. LAGOON RETREAT",
"47. SEASIDE SOIREE",
"48. ISLAND PARTY",
"49. HIDDEN LAGOON",
"50. ENTERTAINMENT BOARDWALK",
"51. THE FLYING DUTCHMAN",
"52. GHOST FORTRESS",
"53. THE KRAKEN",
"54. SIRENS CALL",
"55. SUNKEN VILLAGE",
"56. EAST EGG ISLAND",
"57. LEVEL 1 BLUE OCEAN STADIUM",
"58. LEVEL 2 BLUE OCEAN STADIUM",
"59. LEVEL 3 BLUE OCEAN STADIUM",
"60. WHALE WATCHING TOWER",
"61. DOLPHIN WATCHING BOAT",
"62. CORAL REEF",
"63. BEACH WEDDING",
"64. SANTA BEACH PARTY",
"65. DOLPHIN ISLAND",
"66. BEACH SAUNA BAR",
"67. NORDIC FISHING DOCK",
"68. PARTY ISLAND 2022",
"69. OKINAWA BEACH",
"70. PALACE PIER",
"71. BAGA BEACH",
"72. OCEANIC GARDEN",
"73. BEACH ALL",
"74. OPEN GAME GUARDIAN",
"75. BACK",
" 76.EXIT"} 

local z = gg.multiChoice(zz, nil,"BEACH NAMES") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then VOLLEYBALL_COURT_1()
end
if z[2] then MERMAN_STATUE_2()
end
if z[3] then CAROUSEL_3()
end
if z[4] then WATER_PARK_4()
end
if z[5] then BLUEBEARDS_PIRATE_SHIP_5()
end
if z[6] then AQUARIUM_6()
end
if z[7] then LIGHTHOUSE_7()
end
if z[8] then LIFEGUARD_TOWER_8()
end
if z[9] then RELAXING_BEACH_9()
end
if z[10] then SURFER_BEACH_10()
end
if z[11] then SAILORMANS_PIER_11()
end 
if z[12] then LUXURY_BOAT_MARINA_12()
end 
if z[13] then ASTRO_TWIRL_ROCKET_RIDE_13()
end 
if z[14] then BEACHFRONT_SHOPPING_MALL_14()
end 
if z[15] then CRESCENT_SHOPPING_MALL_15()
end
if z[16] then BICYCLE_MOTOCROSS_CENTER_16()
end
if z[17] then ROWING_CENTER_17()
end
if z[18] then BEACH_VOLLEYBALL_CENTER_18()
end
if z[19] then WATERFRONT_WHARF_19()
end
if z[20] then YACHT_CLUB_20()
end
if z[21] then BOAT_HOUSE_21()
end
if z[22] then LUXURY_BEACH_HOUSE_22()
end
if z[23] then OCEAN_VILLA_23()
end
if z[24] then SAILING_CLUB_24()
end
if z[25] then GUARDIAN_OF_SAILORS_25()
end
if z[26] then BEACH_DELTA_26()
end
if z[27] then PARADISE_ISLAND_27()
end
if z[28] then LUXURY_BEACH_HOTEL_28()
end
if z[29] then SAILING_BOAT_PIER_29()
end
if z[30] then ROYAL_RESORT_30()
end
if z[31] then LUXURY_MALL_31()
end 
if z[32] then LUXURY_CRUISE_SHIP_32()
end 
if z[33] then LIGHTHOUSE_OF_SIMCITY_33()
end 
if z[34] then BEACH_THEATRE_34()
end 
if z[35] then COLOSSAL_SANDCASTLE_35()
end
if z[36] then ISLE_OF_WIGHT_THE_NEEDLES_36()
end
if z[37] then PIER_SHOPPING_AREA_37()
end
if z[38] then SEA_FIREFLIES_38()
end
if z[39] then SEA_LIONS_CENTER_39()
end
if z[40] then HARBOR_MARKETPLACE_40()
end
if z[41] then BEACH_TORII_41()
end
if z[42] then BEACH_SPORTS_RENTAL_42()
end
if z[43] then SEASHORE_SAUNA_RESORT_43()
end
if z[44] then BEACH_WATERFALL_44()
end
if z[45] then PEBBLE_CLIFFS_45()
end
if z[46] then LAGOON_RETREAT_46()
end
if z[47] then SEASIDE_SOIREE_47()
end
if z[48] then ISLAND_PARTY_48()
end
if z[49] then HIDDEN_LAGOON_49()
end
if z[50] then ENTERTAINMENT_BOARDWALK_50()
end
if z[51] then THE_FLYING_DUTCHMAN_51()
end 
if z[52] then GHOST_FORTRESS_52()
end 
if z[53] then THE_KRAKEN_53()
end 
if z[54] then SIRENS_CALL_54()
end 
if z[55] then SUNKEN_VILLAGE_55()
end
if z[56] then EASTEGG_ISLAND_56()
end
if z[57] then LEVEL_1_BLUE_OCEAN_STADIUM_57()
end
if z[58] then LEVEL_2_BLUE_OCEAN_STADIUM_58()
end
if z[59] then LEVEL_3_BLUE_OCEAN_STADIUM_59()
end
if z[60] then WHALE_WATCHING_TOWER_60()
end
if z[61] then DOLPHIN_WATCHING_BOAT_61()
end
if z[62] then CORAL_REEF_62()
end
if z[63] then BEACH_WEDDING_63()
end
if z[64] then SANTA_BEACH_PARTY_64()
end
if z[65] then DOLPHIN_ISLAND_65()
end
if z[66] then BEACH_SAUNA_BAR_66()
end
if z[67] then NORDIC_FISHING_DOCK_67()
end
if z[68] then PARTY_ISLAND_2022_68()
end
if z[69] then OKINAWA_BEACH_69()
end
if z[70] then PALACE_PIER_70()
end
if z[71] then BAGA_BEACH_71()
end
if z[72] then OCEANIC_GARDEN_72()
end
if z[73] then BEACH_ALL()
end 
if z[74] then eigth()
end 
if z[75] then Mainmenu()
end 
if z[76] then exit()
end
end
end
end

function BEACH_ALL()
VOLLEYBALL_COURT_1()   
MERMAN_STATUE_2() 
CAROUSEL_3() 
WATER_PARK_4() 
BLUEBEARDS_PIRATE_SHIP_5()
AQUARIUM_6()
LIGHTHOUSE_7()
LIFEGUARD_TOWER_8() 
RELAXING_BEACH_9() 
SURFER_BEACH_10() 
SAILORMANS_PIER_11()
LUXURY_BOAT_MARINA_12() 
ASTRO_TWIRL_ROCKET_RIDE_13() 
BEACHFRONT_SHOPPING_MALL_14() 
CRESCENT_SHOPPING_MALL_15() 
BICYCLE_MOTOCROSS_CENTER_16()
ROWING_CENTER_17() 
BEACH_VOLLEYBALL_CENTER_18() 
WATERFRONT_WHARF_19() 
YACHT_CLUB_20() 
BOAT_HOUSE_21() 
LUXURY_BEACH_HOUSE_22() 
OCEAN_VILLA_23() 
SAILING_CLUB_24()
GUARDIAN_OF_SAILORS_25() 
BEACH_DELTA_26() 
PARADISE_ISLAND_27() 
LUXURY_BEACH_HOTEL_28() 
SAILING_BOAT_PIER_29() 
ROYAL_RESORT_30() 
LUXURY_MALL_31() 
LUXURY_CRUISE_SHIP_32() 
LIGHTHOUSE_OF_SIMCITY_33()
BEACH_THEATRE_34() 
COLOSSAL_SANDCASTLE_35() 
ISLE_OF_WIGHT_THE_NEEDLES_36() 
PIER_SHOPPING_AREA_37() 
SEA_FIREFLIES_38() 
SEA_LIONS_CENTER_39() 
HARBOR_MARKETPLACE_40() 
BEACH_TORII_41() 
BEACH_SPORTS_RENTAL_42() 
SEASHORE_SAUNA_RESORT_43() 
BEACH_WATERFALL_44() 
PEBBLE_CLIFFS_45() 
LAGOON_RETREAT_46() 
SEASIDE_SOIREE_47()
ISLAND_PARTY_48() 
HIDDEN_LAGOON_49() 
ENTERTAINMENT_BOARDWALK_50() 
THE_FLYING_DUTCHMAN_51() 
GHOST_FORTRESS_52() 
THE_KRAKEN_53() 
SIRENS_CALL_54() 
SUNKEN_VILLAGE_55() 
EASTEGG_ISLAND_56() 
LEVEL_1_BLUE_OCEAN_STADIUM_57() 
LEVEL_2_BLUE_OCEAN_STADIUM_58() 
LEVEL_3_BLUE_OCEAN_STADIUM_59()
WHALE_WATCHING_TOWER_60() 
DOLPHIN_WATCHING_BOAT_61()
CORAL_REEF_62() 
BEACH_WEDDING_63()
SANTA_BEACH_PARTY_64()
DOLPHIN_ISLAND_65() 
BEACH_SAUNA_BAR_66() 
NORDIC_FISHING_DOCK_67() 
PARTY_ISLAND_2022_68() 
OKINAWA_BEACH_69()
PALACE_PIER_70()
BAGA_BEACH_71()   
OCEANIC_GARDEN_72() 
end

function BEACH_ALL_DANIEL1()
VOLLEYBALL_COURT_DANIEL_1()    
MERMAN_STATUE_DANIEL_2()  
CAROUSEL_DANIEL_3()  
WATER_PARK_DANIEL_4()  
BLUEBEARDS_PIRATE_SHIP_DANIEL_5() 
AQUARIUM_DANIEL_6() 
LIGHTHOUSE_DANIEL_7() 
LIFEGUARD_TOWER_DANIEL_8()  
RELAXING_BEACH_DANIEL_9()  
SURFER_BEACH_DANIEL_10()  
SAILORMANS_PIER_DANIEL_11() 
LUXURY_BOAT_MARINA_DANIEL_12()  
ASTRO_TWIRL_ROCKET_RIDE_DANIEL_13()  
BEACHFRONT_SHOPPING_MALL_DANIEL_14()  
CRESCENT_SHOPPING_MALL_DANIEL_15()  
BICYCLE_MOTOCROSS_CENTER_DANIEL_16() 
ROWING_CENTER_DANIEL_17()  
BEACH_VOLLEYBALL_CENTER_DANIEL_18()  
WATERFRONT_WHARF_DANIEL_19()  
YACHT_CLUB_DANIEL_20()  
BOAT_HOUSE_DANIEL_21()  
LUXURY_BEACH_HOUSE_DANIEL_22()  
OCEAN_VILLA_DANIEL_23()  
SAILING_CLUB_DANIEL_24() 
GUARDIAN_OF_SAILORS_DANIEL_25()  
BEACH_DELTA_DANIEL_26()  
PARADISE_ISLAND_DANIEL_27()  
LUXURY_BEACH_HOTEL_DANIEL_28()  
SAILING_BOAT_PIER_DANIEL_29()  
ROYAL_RESORT_DANIEL_30()  
LUXURY_MALL_DANIEL_31()  
LUXURY_CRUISE_SHIP_DANIEL_32()  
LIGHTHOUSE_OF_SIMCITY_DANIEL_33() 
BEACH_THEATRE_DANIEL_34()  
COLOSSAL_SANDCASTLE_DANIEL_35()  
ISLE_OF_WIGHT_THE_NEEDLES_DANIEL_36()  
PIER_SHOPPING_AREA_DANIEL_37()  
SEA_FIREFLIES_DANIEL_38()  
SEA_LIONS_CENTER_DANIEL_39()  
HARBOR_MARKETPLACE_DANIEL_40()  
BEACH_TORII_DANIEL_41()  
BEACH_SPORTS_RENTAL_DANIEL_42()  
SEASHORE_SAUNA_RESORT_DANIEL_43()  
BEACH_WATERFALL_DANIEL_44()  
PEBBLE_CLIFFS_DANIEL_45()  
LAGOON_RETREAT_DANIEL_46()  
SEASIDE_SOIREE_DANIEL_47() 
ISLAND_PARTY_DANIEL_48()  
HIDDEN_LAGOON_DANIEL_49()  
ENTERTAINMENT_BOARDWALK_DANIEL_50()  
THE_FLYING_DUTCHMAN_DANIEL_51()  
GHOST_FORTRESS_DANIEL_52()  
THE_KRAKEN_DANIEL_53()  
SIRENS_CALL_DANIEL_54()  
SUNKEN_VILLAGE_DANIEL_55()  
EASTEGG_ISLAND_DANIEL_56()  
LEVEL_1_BLUE_OCEAN_STADIUM_DANIEL_57()  
LEVEL_2_BLUE_OCEAN_STADIUM_DANIEL_58()  
LEVEL_3_BLUE_OCEAN_STADIUM_DANIEL_59() 
WHALE_WATCHING_TOWER_DANIEL_60()  
DOLPHIN_WATCHING_BOAT_DANIEL_61() 
CORAL_REEF_DANIEL_62()  
BEACH_WEDDING_DANIEL_63() 
SANTA_BEACH_PARTY_DANIEL_64() 
DOLPHIN_ISLAND_DANIEL_65()  
BEACH_SAUNA_BAR_DANIEL_66()  
NORDIC_FISHING_DOCK_DANIEL_67()  
PARTY_ISLAND_2022_DANIEL_68()  
OKINAWA_BEACH_DANIEL_69() 
PALACE_PIER_DANIEL_70() 
BAGA_BEACH_DANIEL_71()    
OCEANIC_GARDEN_DANIEL_72()
gg.sleep(10)
end

function beach_transform()
iron_beach_1() 
gg.sleep(10)
wood_beach_2()gg.sleep(10)
plastic_beach_3()gg.sleep(10)
seed_beach_4()gg.sleep(10)
minerals_beach_5()gg.sleep(10)
chemical_beach_6()gg.sleep(10)
textile_beach_7()gg.sleep(10)
glass_beach_8()gg.sleep(10)
animalfeed_beach_9()gg.sleep(10)
sugar_and_spice_beach_10()gg.sleep(10)
electric_comp_beach_11()gg.sleep(10)
nails_beach_12() gg.sleep(10)
planks_beach_13()gg.sleep(10)
bricks_beach_14()gg.sleep(10)
cement_beach_15()gg.sleep(10)
glue_beach_16()gg.sleep(10)
paint_beach_17()gg.sleep(10)
hammer_beach_18() gg.sleep(10)
measuring_tape_beach_19()gg.sleep(10)
cooking_untensils_beach_20()gg.sleep(10)
gg.sleep(10)
shovel_beach_21()gg.sleep(10)
ladder_beach_22()gg.sleep(10)
drill_beach_23()gg.sleep(10)
Vegetables_beach_24() gg.sleep(10)
Flourbag_beach_25()gg.sleep(10)
fruit_and_berries_beach_26()gg.sleep(10)
beef_beach_27()gg.sleep(10)
cheese_beach_28()gg.sleep(10)
corn_beach_29()gg.sleep(10)
cream_beach_30()gg.sleep(10)
chairs_beach_31() gg.sleep(10)
Tables_beach_32()gg.sleep(10)
Home_texiles_beach_33()gg.sleep(10)
couch_beach_34()gg.sleep(10)
cupboard_beach_35()gg.sleep(10)
grass_beach_36() gg.sleep(10)
tree_sampling_beach_37()gg.sleep(10)
garden_furniture_beach_38()gg.sleep(10)
firepit_beach_39()gg.sleep(10)
garden_nomes_beach_40()
gg.sleep(10)
lawnmover_beach_41()gg.sleep(10)
donut_beach_42()gg.sleep(10)
green_smoothie_beach_43()gg.sleep(10)
breadroll_beach_44()gg.sleep(10)
cherry_cheesecake_beach_45()gg.sleep(10)
frozen_yogurt_beach_46()gg.sleep(10)
coffee_beach_47()gg.sleep(10)
cap_beach_48()gg.sleep(10)
shoes_beach_49()gg.sleep(10)
watch_beach_50()gg.sleep(10)
suits_beach_51()gg.sleep(10)
backpack_beach_52()gg.sleep(10)
fries_beach_53()gg.sleep(10)
pizza_beach_54()gg.sleep(10)
hamburger_beach_55()gg.sleep(10)
icecream_sandwich_beach_56()gg.sleep(10)
lemonade_beach_57()gg.sleep(10)
popcorn_beach_58()gg.sleep(10)
BBQ_GRILL_beach_59()gg.sleep(10)
REFRIGERATOR_beach_60()gg.sleep(10)
gg.sleep(10)
LIGHTING_SYSTEM_beach_61()gg.sleep(10)
tv_beach_62()gg.sleep(10)
MICROWAVE_OVEN_beach_63()gg.sleep(10)
coconut_beach_64()gg.sleep(10)
coconut_oil_beach_65()gg.sleep(10)
face_cream_beach_66()gg.sleep(10)
tropical_drink_beach_67()gg.sleep(10)
recylce_fabric_beach_68()gg.sleep(10)
reuseable_bag_beach_69()gg.sleep(10)
yoga_mats_beach_70()gg.sleep(10)
ecological_shoes_beach_71()gg.sleep(10)
crude_oil_beach_72() gg.sleep(10)
BEACH_ALL_DANIEL1()
gg.sleep(10)
eigth()
end


--nano --11

--iron 1

function iron_beach_1()gg.sleep(5)
VOLLEYBALL_COURT_DANIEL_1()gg.sleep(5)
iron_daniel()gg.sleep(5)
cp()gg.sleep(5)
end

--wood 2

function wood_beach_2()gg.sleep(5)
MERMAN_STATUE_DANIEL_2()gg.sleep(5)
wood_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--plastic 3
function plastic_beach_3()gg.sleep(5)
CAROUSEL_DANIEL_3()gg.sleep(5) 
plastic_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--seed 4 
function seed_beach_4()gg.sleep(5)
WATER_PARK_DANIEL_4()gg.sleep(5) 
seed_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--minerals 5
function minerals_beach_5()gg.sleep(5)
BLUEBEARDS_PIRATE_SHIP_DANIEL_5()gg.sleep(5)
minerals_daniel()gg.sleep(5)
cp()gg.sleep(5)  

 
end

--chemical 6 
function chemical_beach_6()gg.sleep(5)
AQUARIUM_DANIEL_6()gg.sleep(5)
chemical_daniel()gg.sleep(5)
cp()gg.sleep(5)
end

--textile 7
function textile_beach_7()gg.sleep(5)
LIGHTHOUSE_DANIEL_7()gg.sleep(5)
texile_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--glass 8
function glass_beach_8()gg.sleep(5)
LIFEGUARD_TOWER_DANIEL_8()gg.sleep(5) 
glass_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--animalfeed 9
function animalfeed_beach_9()gg.sleep(5)
RELAXING_BEACH_DANIEL_9()gg.sleep(5) 
animalfeed_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

-- sugar and spice 10
function sugar_and_spice_beach_10()gg.sleep(5)
SURFER_BEACH_DANIEL_10()gg.sleep(5) 
sugar_and_spice_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--electric components 11
function electric_comp_beach_11()gg.sleep(5)
SAILORMANS_PIER_DANIEL_11()gg.sleep(5)
electriccomp_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

-- BUILDING STORE --6

--nails 12

function nails_beach_12()gg.sleep(5)
LUXURY_BOAT_MARINA_DANIEL_12()gg.sleep(5) 
nail_daniel()gg.sleep(5)
cp1()gg.sleep(5)


end

--planks 13

function planks_beach_13()gg.sleep(5)
ASTRO_TWIRL_ROCKET_RIDE_DANIEL_13()gg.sleep(5) 
planks_daniel()gg.sleep(5)
cp1()gg.sleep(5)


end

--bricks 14

function bricks_beach_14()gg.sleep(5)
BEACHFRONT_SHOPPING_MALL_DANIEL_14()gg.sleep(5) 
bricks_daniel()gg.sleep(5)
cp1()gg.sleep(5)


end

--cement  15

function cement_beach_15()gg.sleep(5)
CRESCENT_SHOPPING_MALL_DANIEL_15()gg.sleep(5) 
cement_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

-- glue 16

function glue_beach_16()gg.sleep(5)
BICYCLE_MOTOCROSS_CENTER_DANIEL_16()gg.sleep(5)
glue_daniel()gg.sleep(5)
cp1()gg.sleep(5)


end

--paint 17 *

function paint_beach_17()gg.sleep(5)
ROWING_CENTER_DANIEL_17()gg.sleep(5) 
paint_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--HARDWARE STORE --6

--hammer 18

function hammer_beach_18()gg.sleep(5)
BEACH_VOLLEYBALL_CENTER_DANIEL_18()gg.sleep(5) 
hammer_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--measuring tape 19

function measuring_tape_beach_19()gg.sleep(5)
WATERFRONT_WHARF_DANIEL_19()gg.sleep(5) 
measuring_tape_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--cooking_untensils 20

function cooking_untensils_beach_20()gg.sleep(5)
YACHT_CLUB_DANIEL_20()gg.sleep(5) 
cooking_untensils_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--shovel 21

function shovel_beach_21()gg.sleep(5)
BOAT_HOUSE_DANIEL_21()gg.sleep(5) 
shovel_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--ladder  22

function ladder_beach_22()gg.sleep(5)
LUXURY_BEACH_HOUSE_DANIEL_22()gg.sleep(5) 
ladder_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--drill 23 *

function drill_beach_23()gg.sleep(5)
OCEAN_VILLA_DANIEL_23()gg.sleep(5) 
drill_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--FARMERS MARKET

--Vegetables 24

function Vegetables_beach_24()gg.sleep(5)
SAILING_CLUB_DANIEL_24()gg.sleep(5)
Vegetables_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--Flourbag 25

function Flourbag_beach_25()gg.sleep(5)
GUARDIAN_OF_SAILORS_DANIEL_25()gg.sleep(5) 
Flourbag_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--fruit_and_berries 26

function fruit_and_berries_beach_26()gg.sleep(5)
BEACH_DELTA_DANIEL_26()gg.sleep(5) 
fruit_and_berries_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--beef 27

function beef_beach_27()gg.sleep(5)
PARADISE_ISLAND_DANIEL_27()gg.sleep(5) 
beef_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--cheese 28

function cheese_beach_28()gg.sleep(5)
LUXURY_BEACH_HOTEL_DANIEL_28()gg.sleep(5)
cheese_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--corn 29

function corn_beach_29()gg.sleep(5)
SAILING_BOAT_PIER_DANIEL_29()gg.sleep(5) 
corn_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--cream 30

function cream_beach_30()gg.sleep(5)
ROYAL_RESORT_DANIEL_30()gg.sleep(5)
cream_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

-- FURNITURE STORE

--chairs_daniel 31

function chairs_beach_31()gg.sleep(5)
LUXURY_MALL_DANIEL_31()gg.sleep(5)
chairs_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--Tables 32

function Tables_beach_32()gg.sleep(5)
LUXURY_CRUISE_SHIP_DANIEL_32()gg.sleep(5)
Tables_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--Home_texiles 33

function Home_texiles_beach_33()gg.sleep(5)
LIGHTHOUSE_OF_SIMCITY_DANIEL_33()gg.sleep(5)
Home_texiles_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--couch 34 *** level 33

function couch_beach_34()gg.sleep(5)
BEACH_THEATRE_DANIEL_34()gg.sleep(5) 
couch_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--cupboard 35

function cupboard_beach_35()gg.sleep(5)
COLOSSAL_SANDCASTLE_DANIEL_35()gg.sleep(5) 
cupboard_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--GARDEN SUPPLIES

--grass 36

function grass_beach_36()gg.sleep(5)
ISLE_OF_WIGHT_THE_NEEDLES_DANIEL_36()gg.sleep(5) 
grass_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--tree_sampling 37

function tree_sampling_beach_37()gg.sleep(5)
PIER_SHOPPING_AREA_DANIEL_37()gg.sleep(5) 
tree_sampling_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--garden_furniture 38
function garden_furniture_beach_38()gg.sleep(5)
SEA_FIREFLIES_DANIEL_38()gg.sleep(5) 
garden_furniture_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--firepit 39
function firepit_beach_39()gg.sleep(5)
SEA_LIONS_CENTER_DANIEL_39()gg.sleep(5) 
firepit_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--garden_nomes 40 level 34
function garden_nomes_beach_40()gg.sleep(5)
HARBOR_MARKETPLACE_DANIEL_40()gg.sleep(5) 
garden_nomes_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--lawnmover 41

function lawnmover_beach_41()gg.sleep(5)
BEACH_TORII_DANIEL_41()gg.sleep(5) 
lawnmover_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--DONUT SHOP

--donut 42

function donut_beach_42()gg.sleep(5)
BEACH_SPORTS_RENTAL_DANIEL_42()gg.sleep(5) 
donut_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--green_smoothie 43

function green_smoothie_beach_43()gg.sleep(5)
SEASHORE_SAUNA_RESORT_DANIEL_43()gg.sleep(5) 
green_smoothie_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--breadroll 44

function breadroll_beach_44()gg.sleep(5)
BEACH_WATERFALL_DANIEL_44()gg.sleep(5) 
breadroll_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--cherry_cheesecake 45

function cherry_cheesecake_beach_45()gg.sleep(5)
PEBBLE_CLIFFS_DANIEL_45()gg.sleep(5) 
cherry_cheesecake_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--frozen_yogurt 46

function frozen_yogurt_beach_46()gg.sleep(5)
LAGOON_RETREAT_DANIEL_46()gg.sleep(5) 
frozen_yogurt_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--coffee 47 level 33
function coffee_beach_47()gg.sleep(5)
SEASIDE_SOIREE_DANIEL_47()gg.sleep(5)
coffee_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--FASHION STORE

--cap 48
function cap_beach_48()gg.sleep(5)
ISLAND_PARTY_DANIEL_48()gg.sleep(5) 
cap_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--shoes 49
function shoes_beach_49()gg.sleep(5)
HIDDEN_LAGOON_DANIEL_49()gg.sleep(5)
shoes_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--watch 50
function watch_beach_50()gg.sleep(5)
ENTERTAINMENT_BOARDWALK_DANIEL_50()gg.sleep(5) 
watch_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--suits 51 level 32
function suits_beach_51()gg.sleep(5)
THE_FLYING_DUTCHMAN_DANIEL_51()gg.sleep(5) 
suits_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--backpack 52 level unknow
function backpack_beach_52()gg.sleep(5)
GHOST_FORTRESS_DANIEL_52()gg.sleep(5) 
backpack_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--FAST FOOD RESTAURANT 

--fries 53 level unknow 
function fries_beach_53()gg.sleep(5)
THE_KRAKEN_DANIEL_53()gg.sleep(5) 
fries_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--pizza 54
function pizza_beach_54()gg.sleep(5)
SIRENS_CALL_DANIEL_54()gg.sleep(5) 
pizza_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--hamburger 55 level 31
function hamburger_beach_55()gg.sleep(5)
SUNKEN_VILLAGE_DANIEL_55()gg.sleep(5) 
hamburger_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--icecream_sandwich 56

function icecream_sandwich_beach_56()gg.sleep(5)
EASTEGG_ISLAND_DANIEL_56()gg.sleep(5)
icecream_sandwich_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--lemonade 57 level 42
function lemonade_beach_57()gg.sleep(5)
LEVEL_1_BLUE_OCEAN_STADIUM_DANIEL_57()gg.sleep(5) 
lemonade_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--popcorn 58 level 43
function popcorn_beach_58()gg.sleep(5)
LEVEL_2_BLUE_OCEAN_STADIUM_DANIEL_58()gg.sleep(5)
popcorn_daniel()gg.sleep(5)
cp()gg.sleep(5)


end

--HOME_PARTS

--BBQ_GRILL 59
function BBQ_GRILL_beach_59()gg.sleep(5)
LEVEL_3_BLUE_OCEAN_STADIUM_DANIEL_59()gg.sleep(5)
BBQ_GRILL_daniel()gg.sleep(5)
cp()gg.sleep(5)


end


--REFRIGERATOR 60 level 35
function REFRIGERATOR_beach_60()gg.sleep(5)
WHALE_WATCHING_TOWER_DANIEL_60()gg.sleep(5) 
REFRIGERATOR_daniel()gg.sleep(5)
cp()gg.sleep(5)


end


--LIGHTING_SYSTEM 61 level
function LIGHTING_SYSTEM_beach_61()gg.sleep(5)
DOLPHIN_WATCHING_BOAT_DANIEL_61()gg.sleep(5)
LIGHTING_SYSTEM_daniel()gg.sleep(5)
cp()gg.sleep(5)


end



--TV 62 level 

function tv_beach_62()gg.sleep(5)
CORAL_REEF_DANIEL_62()gg.sleep(5) 
TV_daniel()gg.sleep(5)
cp()gg.sleep(5)


end


--MICROWAVE_OVEN 63 level 

function MICROWAVE_OVEN_beach_63()gg.sleep(5)
BEACH_WEDDING_DANIEL_63()gg.sleep(5)
MICROWAVE_OVEN_daniel()gg.sleep(5)
cp()gg.sleep(5)


end
 
--SUNNY PARTS

--coconut 64

function coconut_beach_64()gg.sleep(5)
SANTA_BEACH_PARTY_DANIEL_64()gg.sleep(5)
coconut_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end

--coconut_oil 65

function coconut_oil_beach_65()gg.sleep(5)
DOLPHIN_ISLAND_DANIEL_65()gg.sleep(5) 
coconut_oil_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end

--face_cream 66

function face_cream_beach_66()gg.sleep(5)
BEACH_SAUNA_BAR_DANIEL_66()gg.sleep(5) 
face_cream_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end
 
--tropical_drink 67

function tropical_drink_beach_67()gg.sleep(5)
NORDIC_FISHING_DOCK_DANIEL_67()gg.sleep(5) 
tropical_drink_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end
 
--GREENVALLEY PARTS

--recylce_fabric 68

function recylce_fabric_beach_68()gg.sleep(5)
PARTY_ISLAND_2022_DANIEL_68()gg.sleep(5) 
recylce_fabric_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end

--reuseable_bag 69

function reuseable_bag_beach_69()gg.sleep(5)
OKINAWA_BEACH_DANIEL_69()gg.sleep(5)
reuseable_bag_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end
 
--yoga_mats 70

function yoga_mats_beach_70()gg.sleep(5)
PALACE_PIER_DANIEL_70()gg.sleep(5)
yoga_mats_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end
 
--ecological_shoes

function ecological_shoes_beach_71()gg.sleep(5)
BAGA_BEACH_DANIEL_71()gg.sleep(5)
ecological_shoes_daniel()gg.sleep(5)
cp3()gg.sleep(5)


end
 
--CACTUS_PARTS

--crude_oil 72

function crude_oil_beach_72()gg.sleep(5)
OCEANIC_GARDEN_DANIEL_72()gg.sleep(5) 
crude_oil_daniel()gg.sleep(5) 
cp3()gg.sleep(5)

end


function building_finder()
findbuildingItemsPointer() 
local Offset_one = gg.getResults(1741) 
local results = {};
for i, one_Offset in ipairs(building_items_pointer.building_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_buildings_64bit or offset_buildings_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results) 
end


function VOLLEYBALL_COURT_1()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == VOLLEYBALL_COURT then s = {{name = "VOLLEYBALL COURT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}
break
end 
end 
gg.addListItems(s) 
gg.toast("VOLLEYBALL COURT") 
end 

function VOLLEYBALL_COURT_DANIEL_1()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value==VOLLEYBALL_COURT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function MERMAN_STATUE_2()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MERMAN_STATUE then s = {{name = "MERMAN STATUE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("MERMAN STATUE") 
end 

function MERMAN_STATUE_DANIEL_2()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == MERMAN_STATUE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function CAROUSEL_3()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CAROUSEL then s = {{name = "CAROUSEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("CAROUSEL") 
end 

function CAROUSEL_DANIEL_3()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CAROUSEL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function WATER_PARK_4()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WATER_PARK then s = {{name = "WATER PARK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("WATER PARK") 
end 

function WATER_PARK_DANIEL_4()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WATER_PARK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BLUEBEARDS_PIRATE_SHIP_5()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BLUEBEARDS_PIRATE_SHIP then s = {{name = "BLUEBEARDS PIRATE SHIP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BLUEBEARDS PIRATE SHIP") 
end 

function BLUEBEARDS_PIRATE_SHIP_DANIEL_5()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BLUEBEARDS_PIRATE_SHIP then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function AQUARIUM_6()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == AQUARIUM then s = {{name = "AQUARIUM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS AQUARIUM") 
end 

function AQUARIUM_DANIEL_6()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == AQUARIUM then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LIGHTHOUSE_7()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LIGHTHOUSE then s = {{name = "LIGHTHOUSE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("LIGHTHOUSE") 
end 

function LIGHTHOUSE_DANIEL_7()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LIGHTHOUSE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LIFEGUARD_TOWER_8()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LIFEGUARD_TOWER then s = {{name = "LIFEGUARD TOWER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LIFEGUARD TOWER") 
end 

function LIFEGUARD_TOWER_DANIEL_8()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LIFEGUARD_TOWER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function RELAXING_BEACH_9()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == RELAXING_BEACH then s = {{name = "RELAXING BEACH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS RELAXING BEACH") 
end 

function RELAXING_BEACH_DANIEL_9()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == RELAXING_BEACH then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SURFER_BEACH_10()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SURFER_BEACH then s = {{name = "SURFER BEACH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SURFER BEACH") 
end 

function SURFER_BEACH_DANIEL_10()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SURFER_BEACH then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SAILORMANS_PIER_11()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SAILORMANS_PIER then s = {{name = "SAILORMANS PIER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SAILORMANS PIER") 
end 

function SAILORMANS_PIER_DANIEL_11()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SAILORMANS_PIER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LUXURY_BOAT_MARINA_12()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_BOAT_MARINA then s = {{name = "LUXURY BOAT MARINA", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LUXURY BOAT MARINA") 
end 

function LUXURY_BOAT_MARINA_DANIEL_12()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_BOAT_MARINA then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function ASTRO_TWIRL_ROCKET_RIDE_13()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ASTRO_TWIRL_ROCKET_RIDE then s = {{name = "ASTRO TWIRL ROCKET RIDE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ASTRO TWIRL ROCKET RIDE") 
end 

function ASTRO_TWIRL_ROCKET_RIDE_DANIEL_13()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ASTRO_TWIRL_ROCKET_RIDE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACHFRONT_SHOPPING_MALL_14()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACHFRONT_SHOPPING_MALL then s = {{name = "BEACHFRONT SHOPPING MALL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACHFRONT SHOPPING MALL") 
end 

function BEACHFRONT_SHOPPING_MALL_DANIEL_14()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACHFRONT_SHOPPING_MALL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function CRESCENT_SHOPPING_MALL_15()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CRESCENT_SHOPPING_MALL then s = {{name = "CRESCENT SHOPPING MALL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS CRESCENT SHOPPING MALL") 
end 

function CRESCENT_SHOPPING_MALL_DANIEL_15()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CRESCENT_SHOPPING_MALL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BICYCLE_MOTOCROSS_CENTER_16()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BICYCLE_MOTOCROSS_CENTER then s = {{name = "BICYCLE MOTOCROSS CENTER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BICYCLE MOTOCROSS CENTER") 
end 

function BICYCLE_MOTOCROSS_CENTER_DANIEL_16()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BICYCLE_MOTOCROSS_CENTER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function ROWING_CENTER_17()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ROWING_CENTER then s = {{name = "ROWING CENTER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ROWING CENTER") 
end 

function ROWING_CENTER_DANIEL_17()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ROWING_CENTER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_VOLLEYBALL_CENTER_18()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_VOLLEYBALL_CENTER then s = {{name = "BEACH VOLLEYBALL CENTER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH VOLLEYBALL CENTER") 
end 

function BEACH_VOLLEYBALL_CENTER_DANIEL_18()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_VOLLEYBALL_CENTER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function WATERFRONT_WHARF_19()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WATERFRONT_WHARF then s = {{name = "WATERFRONT WHARF", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS WATERFRONT WHARF") 
end 

function WATERFRONT_WHARF_DANIEL_19()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WATERFRONT_WHARF then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function YACHT_CLUB_20()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == YACHT_CLUB then s = {{name = "YACHT CLUB", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS YACHT CLUB") 
end 

function YACHT_CLUB_DANIEL_20()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == YACHT_CLUB then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BOAT_HOUSE_21()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BOAT_HOUSE then s = {{name = "BOAT HOUSE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BOAT HOUSE") 
end 

function BOAT_HOUSE_DANIEL_21()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BOAT_HOUSE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LUXURY_BEACH_HOUSE_22()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_BEACH_HOUSE then s = {{name = "LUXURY BEACH HOUSE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LUXURY BEACH HOUSE") 
end 

function LUXURY_BEACH_HOUSE_DANIEL_22()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_BEACH_HOUSE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function OCEAN_VILLA_23()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OCEAN_VILLA then s = {{name = "OCEAN VILLA", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS OCEAN VILLA") 
end 

function OCEAN_VILLA_DANIEL_23()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OCEAN_VILLA then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SAILING_CLUB_24()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SAILING_CLUB then s = {{name = "SAILING CLUB", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SAILING CLUB") 
end 

function SAILING_CLUB_DANIEL_24()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SAILING_CLUB then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function GUARDIAN_OF_SAILORS_25()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GUARDIAN_OF_SAILORS then s = {{name = "GUARDIAN OF SAILORS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS GUARDIAN OF SAILORS") 
end 

function GUARDIAN_OF_SAILORS_DANIEL_25()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GUARDIAN_OF_SAILORS then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_DELTA_26()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_DELTA then s = {{name = "BEACH DELTA", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH DELTA") 
end 

function BEACH_DELTA_DANIEL_26()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_DELTA then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function PARADISE_ISLAND_27()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PARADISE_ISLAND then s = {{name = "PARADISE ISLAND", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PARADISE ISLAND") 
end 

function PARADISE_ISLAND_DANIEL_27()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PARADISE_ISLAND then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LUXURY_BEACH_HOTEL_28()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_BEACH_HOTEL then s = {{name = "LUXURY BEACH HOTEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LUXURY BEACH HOTEL ") 
end 

function LUXURY_BEACH_HOTEL_DANIEL_28()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_BEACH_HOTEL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SAILING_BOAT_PIER_29()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SAILING_BOAT_PIER then s = {{name = "SAILING BOAT PIER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SAILING BOAT PIER") 
end 

function SAILING_BOAT_PIER_DANIEL_29()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == 
SAILING_BOAT_PIER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function ROYAL_RESORT_30()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ROYAL_RESORT then s = {{name = "ROYAL RESORT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ROYAL RESORT") 
end 

function ROYAL_RESORT_DANIEL_30()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ROYAL_RESORT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end


function LUXURY_MALL_31()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_MALL then s = {{name = "LUXURY MALL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LUXURY MALL") 
end 

function LUXURY_MALL_DANIEL_31()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_MALL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LUXURY_CRUISE_SHIP_32()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_CRUISE_SHIP then s = {{name = "LUXURY CRUISE SHIP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LUXURY CRUISE SHIP") 
end 

function LUXURY_CRUISE_SHIP_DANIEL_32()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LUXURY_CRUISE_SHIP then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LIGHTHOUSE_OF_SIMCITY_33()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LIGHTHOUSE_OF_SIMCITY then s = {{name = "LIGHTHOUSE OF SIMCITY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LIGHTHOUSE OF SIMCITY") 
end 

function LIGHTHOUSE_OF_SIMCITY_DANIEL_33()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LIGHTHOUSE_OF_SIMCITY then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_THEATRE_34()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_THEATRE then s = {{name = "BEACH THEATRE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH THEATRE") 
end 

function BEACH_THEATRE_DANIEL_34()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_THEATRE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function COLOSSAL_SANDCASTLE_35()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COLOSSAL_SANDCASTLE then s = {{name = "COLOSSAL SANDCASTLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS COLOSSAL SANDCASTLE") 
end 

function COLOSSAL_SANDCASTLE_DANIEL_35()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == COLOSSAL_SANDCASTLE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function ISLE_OF_WIGHT_THE_NEEDLES_36()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ISLE_OF_WIGHT_THE_NEEDLES then s = {{name = "ISLE OF WIGHT THE NEEDLES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ISLE OF WIGHT THE NEEDLES") 
end 

function ISLE_OF_WIGHT_THE_NEEDLES_DANIEL_36()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ISLE_OF_WIGHT_THE_NEEDLES then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function PIER_SHOPPING_AREA_37()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PIER_SHOPPING_AREA then s = {{name = "PIER SHOPPING AREA", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PIER SHOPPING AREA") 
end 

function PIER_SHOPPING_AREA_DANIEL_37()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PIER_SHOPPING_AREA then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SEA_FIREFLIES_38()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEA_FIREFLIES then s = {{name = "SEA FIREFLIES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SEA FIREFLIES") 
end 

function SEA_FIREFLIES_DANIEL_38()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEA_FIREFLIES then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SEA_LIONS_CENTER_39()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEA_LIONS_CENTER then s = {{name = "SEA LIONS CENTER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SEA LIONS CENTER") 
end 

function SEA_LIONS_CENTER_DANIEL_39()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEA_LIONS_CENTER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function HARBOR_MARKETPLACE_40()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HARBOR_MARKETPLACE then s = {{name = "HARBOR MARKET PLACE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS HARBOR MARKET PLACE") 
end 

function HARBOR_MARKETPLACE_DANIEL_40()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HARBOR_MARKETPLACE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_TORII_41()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_TORII then s = {{name = "BEACH TORII", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH TORII") 
end 

function BEACH_TORII_DANIEL_41()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_TORII then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_SPORTS_RENTAL_42()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_SPORTS_RENTAL then s = {{name = "BEACH SPORTS RENTAL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH SPORTS RENTAL") 
end 

function BEACH_SPORTS_RENTAL_DANIEL_42()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_SPORTS_RENTAL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SEASHORE_SAUNA_RESORT_43()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEASHORE_SAUNA_RESORT then s = {{name = "SEASHORE SAUNA RESORT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SEASHORE SAUNA RESORT") 
end 

function SEASHORE_SAUNA_RESORT_DANIEL_43()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEASHORE_SAUNA_RESORT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_WATERFALL_44()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_WATERFALL then s = {{name = "BEACH WATERFALL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH WATERFALL") 
end 

function BEACH_WATERFALL_DANIEL_44()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_WATERFALL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function PEBBLE_CLIFFS_45()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PEBBLE_CLIFFS then s = {{name = "PEBBLE CLIFFS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PEBBLE CLIFFS") 
end 

function PEBBLE_CLIFFS_DANIEL_45()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PEBBLE_CLIFFS then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LAGOON_RETREAT_46()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LAGOON_RETREAT then s = {{name = "LAGOON RETREAT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LAGOON RETREAT") 
end 

function LAGOON_RETREAT_DANIEL_46()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LAGOON_RETREAT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SEASIDE_SOIREE_47()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEASIDE_SOIREE then s = {{name = "SEASIDE SOIREE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SEASIDE SOIREE") 
end 

function SEASIDE_SOIREE_DANIEL_47()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SEASIDE_SOIREE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function ISLAND_PARTY_48()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ISLAND_PARTY then s = {{name = "ISLAND PARTY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ISLAND PARTY") 
end 

function ISLAND_PARTY_DANIEL_48()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ISLAND_PARTY then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function HIDDEN_LAGOON_49()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HIDDEN_LAGOON then s = {{name = "HIDDEN LAGOON", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS HIDDEN LAGOON") 
end 

function HIDDEN_LAGOON_DANIEL_49()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == HIDDEN_LAGOON then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function ENTERTAINMENT_BOARDWALK_50()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ENTERTAINMENT_BOARDWALK then s = {{name = "ENTERTAINMENT BOARDWALK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS ENTERTAINMENT BOARDWALK") 
end 

function ENTERTAINMENT_BOARDWALK_DANIEL_50()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == ENTERTAINMENT_BOARDWALK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function THE_FLYING_DUTCHMAN_51()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == 
THE_FLYING_DUTCHMAN then s = {{name = "THE FLYING DUTCHMAN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS THE FLYING DUTCHMAN") 
end 

function THE_FLYING_DUTCHMAN_DANIEL_51()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == THE_FLYING_DUTCHMAN then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function GHOST_FORTRESS_52()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GHOST_FORTRESS then s = {{name = "GHOST FORTRESS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS GHOST FORTRESS") 
end 

function GHOST_FORTRESS_DANIEL_52()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == GHOST_FORTRESS then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function THE_KRAKEN_53()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == THE_KRAKEN then s = {{name = "THE KRAKEN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS THE KRAKEN") 
end 

function THE_KRAKEN_DANIEL_53()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == THE_KRAKEN then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SIRENS_CALL_54()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SIRENS_CALL then s = {{name = "SIRENS CALL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SIRENS CALL") 
end 

function SIRENS_CALL_DANIEL_54()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SIRENS_CALL then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SUNKEN_VILLAGE_55()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SUNKEN_VILLAGE then s = {{name = "SUNKEN VILLAGE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SUNKEN VILLAGE") 
end 

function SUNKEN_VILLAGE_DANIEL_55()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SUNKEN_VILLAGE then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function EASTEGG_ISLAND_56()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == 
EASTEGG_ISLAND then s = {{name = "EAST EGG ISLAND", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS EAST EGG ISLAND") 
end 

function EASTEGG_ISLAND_DANIEL_56()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == EASTEGG_ISLAND then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LEVEL_1_BLUE_OCEAN_STADIUM_57()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LEVEL_1_BLUE_OCEAN_STADIUM then s = {{name = "LEVEL 1 BLUE OCEAN STADIUM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LEVEL 1 BLUE OCEAN STADIUM") 
end 

function LEVEL_1_BLUE_OCEAN_STADIUM_DANIEL_57()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LEVEL_1_BLUE_OCEAN_STADIUM then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LEVEL_2_BLUE_OCEAN_STADIUM_58()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LEVEL_2_BLUE_OCEAN_STADIUM then s = {{name = "LEVEL 2 BLUE OCEAN STADIUM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LEVEL 2 BLUE OCEAN STADIUM") 
end 

function LEVEL_2_BLUE_OCEAN_STADIUM_DANIEL_58()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LEVEL_2_BLUE_OCEAN_STADIUM then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function LEVEL_3_BLUE_OCEAN_STADIUM_59()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LEVEL_3_BLUE_OCEAN_STADIUM then s = {{name = "LEVEL 3 BLUE OCEAN STADIUM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS LEVEL 3 BLUE OCEAN STADIUM") 
end 

function LEVEL_3_BLUE_OCEAN_STADIUM_DANIEL_59()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == LEVEL_3_BLUE_OCEAN_STADIUM then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function WHALE_WATCHING_TOWER_60()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WHALE_WATCHING_TOWER then s = {{name = "WHALE WATCHING TOWER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS WHALE WATCHING TOWER") 
end 

function WHALE_WATCHING_TOWER_DANIEL_60()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == WHALE_WATCHING_TOWER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function DOLPHIN_WATCHING_BOAT_61()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == DOLPHIN_WATCHING_BOAT then s = {{name = "DOLPHIN WATCHING BOAT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS DOLPHIN WATCHING BOAT") 
end 

function DOLPHIN_WATCHING_BOAT_DANIEL_61()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == DOLPHIN_WATCHING_BOAT then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function CORAL_REEF_62()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CORAL_REEF then s = {{name = "CORAL REEF", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS CORAL REEF") 
end 

function CORAL_REEF_DANIEL_62()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == CORAL_REEF then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_WEDDING_63()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_WEDDING then s = {{name = "BEACH WEDDING", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH WEDDING") 
end 

function BEACH_WEDDING_DANIEL_63()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_WEDDING then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function SANTA_BEACH_PARTY_64()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SANTA_BEACH_PARTY then s = {{name = "SANTA BEACH PARTY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS SANTA BEACH PARTY") 
end 

function SANTA_BEACH_PARTY_DANIEL_64()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == SANTA_BEACH_PARTY then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function DOLPHIN_ISLAND_65()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == DOLPHIN_ISLAND then s = {{name = "DOLPHIN ISLAND", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS DOLPHIN ISLAND") 
end 

function DOLPHIN_ISLAND_DANIEL_65()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == DOLPHIN_ISLAND then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function BEACH_SAUNA_BAR_66()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_SAUNA_BAR then s = {{name = "BEACH SAUNA BAR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS BEACH SAUNA BAR") 
end 

function BEACH_SAUNA_BAR_DANIEL_66()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BEACH_SAUNA_BAR then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function NORDIC_FISHING_DOCK_67()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == NORDIC_FISHING_DOCK then s = {{name = "NORDIC FISHING DOCK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS NORDIC FISHING DOCK") 
end 

function NORDIC_FISHING_DOCK_DANIEL_67()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == NORDIC_FISHING_DOCK then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function PARTY_ISLAND_2022_68()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PARTY_ISLAND_2022 then s = {{name = "PARTY ISLAND 2022", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PARTY ISLAND 2022") 
end 

function PARTY_ISLAND_2022_DANIEL_68()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PARTY_ISLAND_2022 then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function OKINAWA_BEACH_69()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OKINAWA_BEACH then s = {{name = "OKINAWA BEACH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS OKINAWA BEACH") 
end 

function OKINAWA_BEACH_DANIEL_69()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OKINAWA_BEACH then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function PALACE_PIER_70()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PALACE_PIER then s = {{name = "PALACE PIER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("SUCCESS PALACE PIER") 
end 

function PALACE_PIER_DANIEL_70()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == PALACE_PIER then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end
 
 function BAGA_BEACH_71()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BAGA_BEACH then 
s = {{name = "BAGA BEACH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}
break 
end 
end
 gg.addListItems(s) 
gg.toast("BAGA BEACH") 
end 

function BAGA_BEACH_DANIEL_71()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == BAGA_BEACH then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function OCEANIC_GARDEN_72()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OCEANIC_GARDEN then s = {{name = "OCEANIC GARDEN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_buildings_64bit or -offset_buildings_32bit)}}break end end gg.addListItems(s) 
gg.toast("OCEANIC GARDEN") 
end 

function OCEANIC_GARDEN_DANIEL_72()
building_finder()
local y = gg.getResults(gg.getResultsCount())
gg.clearResults()
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) 
for i in ipairs(y) do 
if y[i].value == OCEANIC_GARDEN then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) gg.addListItems(n)end

function building_finder()
findbuildingItemsPointer() 
local Offset_one = gg.getResults(1741) 
local results = {};
for i, one_Offset in ipairs(building_items_pointer.building_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_buildings_64bit or offset_buildings_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results) 
end


function storage_all_checker() 
Buildings_checker_counter_one()
gg.refineNumber("27")  
Buildings_checker_counter_two()
Buildings_checker_counter_3()
gg.clearList()
gg.clearResults()
gg.toast("Successfully ") 
end

function Buildings_checker_counter_one()
findbuildingItemsPointer() 
local results = {};
for i, one_Offset in ipairs(building_items_pointer.building_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and Buildings_checker_counter_one_64 or Buildings_checker_counter_one_32), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results)
end

function Buildings_checker_counter_two()
local Offset_one = gg.getResults(1741)
local results = {};
for i, one_Offset in ipairs(Offset_one) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and -Buildings_checker_counter_two_64 or -Buildings_checker_counter_two_32), flags = gg.TYPE_DWORD}
end  
gg.addListItems(results)  
gg.clearResults()
end
 
function Buildings_checker_counter_3()
boo =gg.getListItems(gg.getResultsCount())gg.clearList()
fxdw={} 
for i,valdw in ipairs(boo)do 
fxdw[#fxdw+1]={flags=4,address =valdw.address +(informations.x64 and offset_buildings_64bit or offset_buildings_32bit) ,value= -1223401015}
end 
gg.setValues(fxdw)
gg.addListItems(fxdw)
end  
 
function Production_submenu()  
local zz = {"1. PRODUCTION","2. PRODUCTION DANIEL ","3. OPEN GAME GUARDIAN","4. BACK ","5. EXIT"} 
local z = gg.multiChoice(zz, nil,"Mainmenu") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then Production_daniel()
end
if z[2] then Production_daniels()  
end
if z[3] then eigth()
end 
if z[4] then warparts_instant()
end 
if z[5] then exit()
end
if z[4] then Mainmenu()
end 
end 
end
end

function POPULATION_DANIEL()
 findPOPULATIONItemsPointer() 
POPULATION_items = {};
for i, pointer in ipairs(POPULATION_items_pointer.POPULATION_items) 
do POPULATION_items[#POPULATION_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_population_64bit or offset_population_32bit)} 
end 
gg.loadResults(POPULATION_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1130306404
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_population_64bit or -offset_population_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.addListItems(n)
end

a =gg.getListItems(gg.getResultsCount())
function warcardreduces()
if a~=0 then;else end
iron_daniel() 
POPULATIONS_contsant()
cp()
end


function POPULATIONS_contsant() 
 findPOPULATIONItemsPointer() 
POPULATION_items = {};
for i, pointer in ipairs(POPULATION_items_pointer.POPULATION_items) 
do POPULATION_items[#POPULATION_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_population_64bit or offset_population_32bit)} 
end 
gg.loadResults(POPULATION_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1130306404
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_population_64bit or -offset_population_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.addListItems(n)
end

function storage_increase()
n=gg.getListItems(gg.getResultsCount())  gg.clearList()
fxdw={}
for i,valdw in ipairs(n)do 
fxdw[#fxdw+1]={value = -1, flags=4,address =valdw.address+(informations.x64 and POPx64 or POPx32)}
end  
gg.setValues(fxdw)
gg.addListItems(fxdw)
end  



status_hacking={}
 initialization_variable=nil table_name={'tap this to activate','exit'}  

function main() 
choice=gg.choice(table_name,initialization_variable,'(some buildings cannot be deleted and saved)')
 if choice==1 then if status_hacking[1]==1 then revert()   
else  
modify() Mainmenu() gg.clearResults()
end 
end 
if choice==2 then gg.sleep(100)gg.toast('script ended') gg.clearResults() 
Mainmenu() 
end
end
 function modify() 
 t={}
 t =gg.getListItems(gg.getResultsCount())
fxdw={}
for i,valdw in ipairs( t)do 
fxdw[#fxdw+1]={flags=4,address =valdw.address}
end  
gg.loadResults(fxdw)
initialization_variable=choice
 status_hacking[1]=initialization_variable table_name[1]='return to normal' 
 gg.loadResults(fxdw)
reverse=gg.getResults(gg.getResultsCount()) 
gg.clearResults() 
gg.sleep(100)
gg.toast('✔️ACTIVE✔️')
 end 
 
function revert() 
initialization_variable=nil status_hacking[1]=initialization_variable table_name[1]='tap this to activate'
 if reverse ==nil
 then gg.setValues(reverse)
 
end
 gg.sleep(100)gg.toast('❌ NON-ACTIVE ❌') end 



function abc()
hallo =gg.getListItems(gg.getResultsCount())
fxdw={}
for i,valdw in ipairs(hallo)do 
fxdw[#fxdw+1]={flags=4,address =valdw.address}
end  
gg.loadResults(fxdw)
abc =gg.getResults(gg.getResultsCount())
fxdw=gg.getResults(gg.getResultsCount())
end
 if fxdw~=nil
 then gg.setValues(fxdw)
 gg.clearResults()
end  

function freezeparts()
b=gg.getListItems(gg.getResultsCount())  gg.clearList()
fxdw={}
for i,valdw in ipairs(b)do
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_1 or constant_All_32_1)}
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_2 or constant_All_32_2)}
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_3 or constant_All_32_3)}
fxdw[#fxdw+1]={flags=4,address =valdw.address+(informations.x64 and constant_All_64_4 or constant_All_32_4)}
end  
gg.addListItems(fxdw)
end  

function gp(var)v={{address=var,flags=4}}return gg.getValues(v)end

function cp()
c1=gp(gg.getListItems(gg.getResultsCount())[4].address)[1]gg.clearList()
l1=c1.value  
p=gg.getResults(gg.getResultsCount())
r={}
for i,v in ipairs(p)do  
r[#r+1]={address=v.address,flags=4,value=l1}
end  
gg.setValues(r)
end  

function cp1()
c1=gp(gg.getListItems(gg.getResultsCount())[5].address)[1]gg.clearList()
l1=c1.value  
p=gg.getResults(gg.getResultsCount())
r={}
for i,v in ipairs(p)do  
r[#r+1]={address=v.address,flags=4,value=l1}
end  
gg.setValues(r)
end  
function cp3()
c1=gp(gg.getListItems(gg.getResultsCount())[2].address)[1]gg.clearList()
l1=c1.value  
p=gg.getResults(gg.getResultsCount())
r={}
for i,v in ipairs(p)do  
r[#r+1]={address=v.address,flags=4,value=l1}
end  
gg.setValues(r)
end  
function findPOPULATIONItemsPointer() 
if not POPULATION_items_pointer.POPULATION_items
then findItemsParentPointer()
local count_POPULATION_items_pointer = 75
local results, count_results ,fast = true
if informations.x64 then 
local POPULATION_items_pointer_position = 17
new_search(parent_pointers.items[POPULATION_items_pointer_position].address, gg.TYPE_QWORD) results, 
count_results = get_results(count_POPULATION_items_pointer)
if count_results == count_POPULATION_items_pointer
then POPULATION_items_pointer.POPULATION_items = results 
else gg.alert("Error: POPULATION Items pointer was not found")
fast = true
os.exit()
end
else
local POPULATION_items_pointer_position = 16
new_search(parent_pointers.items[POPULATION_items_pointer_position].address, gg.TYPE_DWORD) results,
count_results =  get_results(count_POPULATION_items_pointer) 
if count_results == count_POPULATION_items_pointer 
then POPULATION_items_pointer.POPULATION_items = results
else gg.alert("Error:POPULATION Items pointer was not found")
 fast = true
os.exit() 
end
end 
end
end

function findbuildingItemsPointer() 
if not building_items_pointer.building_items
then findItemsParentPointer()
local count_building_items_pointer = Building_counts
local results, count_results ,fast = true
if informations.x64 then 
local building_items_pointer_position = 15
new_search(parent_pointers.items[building_items_pointer_position].address, gg.TYPE_QWORD) results, 
count_results = get_results(count_building_items_pointer)
if count_results == count_building_items_pointer
then building_items_pointer.building_items = results 
else gg.alert("Error: buildings Items pointer was not found")
fast = true
os.exit()
end
else
local building_items_pointer_position = 14 
new_search(parent_pointers.items[building_items_pointer_position].address, gg.TYPE_DWORD) results,
count_results =  get_results(count_building_items_pointer) 
if count_results == count_building_items_pointer 
then building_items_pointer.building_items = results
else gg.alert("Error:building Items pointer was not found")
 fast = true
os.exit() 
end
end 
end
end

function findWarBoosterPointer()
if not war_booster_pointer.war then findItemsParentPointer() 
local count_war_booster_pointer = 41
local results, count_results 
if informations.x64 
then 
local war_booster_pointer_position = 49
new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_QWORD)results, 
count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer
 then war_booster_pointer.war = results   
 else findWarBoosterPointer1()
end
else 
local war_booster_pointer_position = 49
new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_DWORD)
 results, count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer 
then war_booster_pointer.war = results 
else 
findWarBoosterPointer1() 
end
end
end
end

function findWarBoosterPointer1()
if not war_booster_pointer.war then findItemsParentPointer() 
local count_war_booster_pointer = 21
local results, count_results 
if informations.x64 
then 
local war_booster_pointer_position = 49
new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_QWORD)results, 
count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer
 then war_booster_pointer.war = results   
 else gg.alert("Error: War Card item pointers was not found", "OK") 
os.exit() 
end
else 
local war_booster_pointer_position = 49
 new_search(parent_pointers.items[war_booster_pointer_position].address, gg.TYPE_DWORD)
 results, count_results = get_results(count_war_booster_pointer)
 if count_results == count_war_booster_pointer 
then war_booster_pointer.war = results 
else 
gg.alert("Error: War card item pointers was not found", "OK") os.exit() 
end
end
end
end

function findWarPartPointer()
if not war_part_pointer.war then findItemsParentPointer() 
local count_war_part_pointer = 12  
local results, count_results 
if informations.x64 
then 
local war_part_pointer_position = 32 
new_search(parent_pointers.items[war_part_pointer_position].address, gg.TYPE_QWORD)results, 
count_results = get_results(count_war_part_pointer)
 if count_results == count_war_part_pointer
 then war_part_pointer.war = results   
 else gg.alert("Error: War Parts item pointers was not found", "OK") 
local  fast = true
os.exit() 
end               
 else 
local war_part_pointer_position = 31 
new_search(parent_pointers.items[war_part_pointer_position].address, gg.TYPE_DWORD) 
results, count_results = get_results(count_war_part_pointer)
 if count_results == count_war_part_pointer 
then war_part_pointer.war = results 
else 
gg.alert("Error: War Parts item pointers was not found", "OK") 
os.exit() 
end
end
end
end

 function findProductionTimesPointer() 
if not production_times_pointer.production_times 
then findItemsParentPointer() 
local count_production_times_pointer = 108 
local results, count_results 
if informations.x64 
then 
local production_times_pointer_position = 18 
new_search(parent_pointers.items[production_times_pointer_position].address, gg.TYPE_QWORD) results, count_results = get_results(count_production_times_pointer) 
if count_results == count_production_times_pointer 
then production_times_pointer.production_times = results 
else gg.alert("Error: Production Times pointer was not found", "OK") 
os.exit()
end 

else 
local production_times_pointer_position = 17
new_search(parent_pointers.items[production_times_pointer_position].address, gg.TYPE_DWORD) results, count_results = get_results(count_production_times_pointer) 
if count_results == count_production_times_pointer 
then production_times_pointer.production_times = results 
else  gg.alert("Error: Production Times pointer was not found", "OK") 
os.exit()
end  
end 
end 
end

function findCommonItemsPointer() 
if not common_items_pointer.common_items
 then findItemsParentPointer()
 local count_common_items_pointer = normal_counter
 local results, count_results fast = true
if informations.x64 then 
local common_items_pointer_position = 16 
new_search(parent_pointers.items[common_items_pointer_position].address, gg.TYPE_QWORD) results, 
count_results = get_results(count_common_items_pointer)
if count_results == count_common_items_pointer
then common_items_pointer.common_items = results 
else gg.alert("Error: Common Items pointer was not found")
fast = true
os.exit()
end

else
local common_items_pointer_position = 15 
new_search(parent_pointers.items[common_items_pointer_position].address, gg.TYPE_DWORD) results,
 count_results =  get_results(count_common_items_pointer) 
  if count_results == count_common_items_pointer 
  then common_items_pointer.common_items = results
 else gg.alert("Error: Common Items pointer was not found")
 fast = true
os.exit() 
end
end 
end
end


function execute_alter_production_times()
findItemsParentPointer()
  findProductionTimesPointer()  
  production_times = {} for i, pointer in ipairs(production_times_pointer.production_times)
  do 
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_bit or offset_timers_32_bit)}
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_1 or offset_timers_32_1)}
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_2 or offset_timers_32_2)}
production_times[#production_times + 1] = {value = 0, flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_timers_64_3 or offset_timers_32_3)}
gg.clearResults()
  end 
  gg.setValues(production_times) 
  gg.toast("success to alter production times") 
end 


function Production_daniel()  
local zz = {"1. NANO STORE","2. BUILDING STORE ","3. HARDWARESTORE","4.FARMERSMARKET","5. FURNITURE SHOP"," 6. GARDENING SUPPLY STORE","7. DONUT STORE ","8. FASHION STORE","9. FAST FOOD RESTAURANT","10. HOME APPLIANCES"," 11. SUNNY ISLES"," 12. GREEN VALLEY ZONE"," 13. CACTUS CANYON ZONE","14. FROZEN FJORD ZONE","15.LIMESTONE CLIFF ZONE","16. BUROCRATE BUILDING","17. SANTA SHOP","18. SPORT SHOP BUILDING","19. CHOCLATE SHOP","20.FARMERS SHOP","21. SELECT ALL","22. OPEN GAME GUARDIAN","23. BACK","24. EXIT"}
local z = gg.multiChoice(zz, nil,"PRODUCTIONS STORES") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then Nano_store() 
end 
if z[2] then Building_store()  
end
if z[3] then Hardware_store() 
end
if z[4] then Farmers_market() 
end
if z[5] then Furniture_shop()
end 
if z[6] then gardening_supplystore() 
end 
if z[7] then Donut_shop() 
end 
if z[8] then fashion_shop() 
end 
if z[9] then fast_food_restaurant() 
end 
if z[10] then home_appliances() 
end 
if z[11] then SUNNY_ISLES()
end 
if z[12] then GREEN_VALLEY()
end 
if z[13] then CACTUS_CANYON()
end 
if z[14] then FROZEN_FJORD()
end 
if z[15] then LIMESTONE_CLIFF()
end 
if z[16] then burocrate_building()
end
if z[17] then santa_shop()
end
if z[18] then sport_shop_building()
end
if z[19] then chocolate_shop()
end
if z[20] then farmer_shop()
end
if z[21] then sellect_all()
end 
if z[22] then eigth()
end 
if z[23] then Production_submenu()
end
if z[24] then exit()
end 
end 
end 
end

function Production_daniels()  
local zz = {"1. NANO STORE DANIEL","2. BUILDING STORE DANIEL","3. HARDWARESTORE DANIEL ","4.FARMERSMARKET DANIEL","5. FURNITURE SHOP DANIEL","6. GARDENING STORE DANIEL","7. DONUT STORE DANIEL ","8. FASHION STORE DANIEL","9. FAST FOOD RESTAURANT DANIEL","10. HOME APPLIANCES DANIEL","11. SUNNY ISLES DANIEL","12. GREEN VALLEY ZONE DANIEL"," 13. CACTUS CANYON ZONE DANIEL","14. FROZEN FJORD ZONE DANIEL ","15. LIMESTONE CLIFF ZONE DANIEL","16. BUROCRATE BUILDING DANIEL","17. SANTA SHOP DANIEL","18. SPORT SHOP BUILDING DANIEL","19.CHOCLATE SHOP DANIEL ","20.FARMERS SHOP DANIEL ","21. OPEN GAME GUARDIAN","22. BACK"," 23. EXIT"}
local z = gg.multiChoice(zz, nil,"Daniel menu") 
if z ~= nil then 
if seven(z) > 0 then 
if z[1] then Nano_stores_daniels() 
end 
if z[2] then Building_store_daniel()  
end
if z[3] then Hardware_store_daniel() 
end
if z[4] then Farmers_market_daniel() 
end
if z[5] then Furniture_shop_daniel()
end 
if z[6] then gardening_supplystore_daniel() 
end 
if z[7] then Donut_shop_daniel() 
end 
if z[8] then fashion_shop_daniel() 
end 
if z[9] then fast_food_restaurant_daniel() 
end 
if z[10] then home_appliances_daniel() 
end 
if z[11] then SUNNY_ISLES_daniel()
end 
if z[12] then GREEN_VALLEY_daniel()
end 
if z[13] then CACTUS_CANYON_daniel()
end 
if z[14] then FROZEN_FJORD_daniel()
end 
if z[15] then LIMESTONE_CLIFF_daniel()
end 
if z[16] then burocrate_building_daniel()
end
if z[17] then santa_shop_daniel()
end
if z[18] then sport_shop_building_daniel()
end
if z[19] then chocolate_shop_daniel()
end
if z[20] then farmer_shop_daniel()
end
if z[21] then eigth()
end
 if z[22] then Production_submenu()
 end
if z[23] then exit()
end 
end 
end 
end

function sellect_all()  
normalpartchecklist() 
Nano_store_all_parts()
building_store_all()
Hardware_store_parts()
Farmers_market_parts()
Furniture_part_shop()
gardening_supply_store_parts()
Donut_shop_all()
Fashionshop_all_parts()
fast_food_restaurant_parts()
HOME_PARTS()
SUNNY_PARTS()
GREENVALLEY_PARTS()
CACTUS_PARTS()
FROSTY_PARTS()
LIMESTONE_CLIFF_PARTS()
burocrate_building_parts()
santa_shop_parts()
choclate_shop_parts()
sport_shop_building_part()
farmers_shop_parts()
ALL_AIRPORT()
eigth() 
end

function normalpartchecklist() 
normalpartchecklist1()
gg.refineNumber("3")  
normalpartchecklist2()
gg.clearResults()
gg.toast("Successfully ") 
end 

function normalpartchecklist1()
findCommonItemsPointer()
local Offset_one = gg.getResults(normal_counter) 
local results = {};
for i, one_Offset in ipairs(common_items_pointer.common_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_normal_part_checklist64 or offset_normal_part_checklist32), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results)
end 
function normalpartchecklist2()
local Offset_one = gg.getResults(normal_counter) 
local results = {};
for i, one_Offset in ipairs(Offset_one) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and -offset_normal_part_checklist64 or -offset_normal_part_checklist32), flags = gg.TYPE_DWORD}
end  
gg.addListItems(results)  
gg.clearResults()
end

function OffsetOne()
findCommonItemsPointer()
local Offset_one = gg.getResults(normal_counter)  
local results = {};
for i, one_Offset in ipairs(common_items_pointer.common_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results)  
end
 
function OffsetTwo() 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Nano_store()  
local zz = {"1. IRON","2. WOOD","3. PLASTIC","4. SEED","5. MINERALS ","6. CHEMICAL","7. TEXILE","8. GLASS","9. ANIMAL FEED","10. SUGAR AND SPICE","11. ELECTRIC COMPONENT ","12. NANO STORE ALL PARTS","13. OPEN GAME GUARDIAN","14. BACK"," 15. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then iron() 
end 
if z[2] then wood()
end
if z[3] then plastic()
end
if z[4] then seed()
end
if z[5] then minerals()
end
if z[6] then chemical()
end
if z[7] then texile()
end
if z[8] then glass()
end
if z[9] then animalfeed()
end
if z[10] then sugar_and_spice()
end
if z[11] then electriccomp()
end
if z[12] then Nano_store_all_parts()
end
if z[13] then eigth()
end
if z[14] then Mainmenu() 
end
if z[15] then exit()
end 
end 
end
end

function Nano_store_all_parts()
iron() 
wood()
plastic()
seed()
minerals()
chemical()
texile()
glass()
animalfeed()
sugar_and_spice()
electriccomp()
end

function Nano_stores_daniels()  
local zz = {"1. IRON DANIEL","2. WOOD DANIEL","3. PLASTIC DANIEL","4. SEED DANIEL","5. MINERALS  DANIEL","6. CHEMICAL DANIEL","7. TEXILE DANIEL","8. GLASS DANIEL","9. ANIMAL FEED DANIEL","10. SUGAR AND SPICE DANIEL","11. ELECTRIC COMPONENT DANIEL","12. OPEN GAME GUARDIAN","13. BACK","14. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then iron_daniel() 
end 

if z[2] then wood_daniel()
end

if z[3] then plastic_daniel()
end

if z[4] then seed_daniel()
end

if z[5] then minerals_daniel()
end

if z[6] then chemical_daniel()
end

if z[7] then texile_daniel()
end

if z[8] then glass_daniel()
end

if z[9] then animalfeed_daniel()
end

if z[10] then sugar_and_spice_daniel()
end

if z[11] then electriccomp_daniel()
end

if z[12] then eigth()
end 

if z[13] then Mainmenu()
end 
if z[14] then exit()
end 
end 
end
end

function iron_daniel()
 findCommonItemsPointer() 
common_items = {};
local message ,fast
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 267176888
 local s = {} 
for i in ipairs(y) 
do y[i].address = y[i].address 
y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address 
w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function iron() 
findCommonItemsPointer()
local Offset_one = gg.getResults(113) 
local results = {};
for i, one_Offset in ipairs(common_items_pointer.common_items) do 
results[#results + 1] = {address = one_Offset.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit), flags = gg.TYPE_DWORD}
end 
gg.loadResults(results) 
 local y = gg.getResults(gg.getResultsCount()) 
gg.clearResults() 
local x = 267176888
local s = {}
for i in ipairs(y) do 
y[i].address = y[i].address 
y[i].flags = gg.TYPE_DWORD 
 end 
 y = gg.getValues(y) 
 for i in ipairs(y) do 
if y[i].value == x then 
s = {{name = "IRON", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL IRON") 
end

function wood_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090874750
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function wood()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090874750
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "WOOD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WOOD") 
end

function plastic()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1270634091
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "PLASTIC", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PLASTIC") 
end

function plastic_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1270634091
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function seed()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274276185
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SEED", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SEED") 
end

function seed_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274276185
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)  
end


function minerals()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1369888960
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MINERALS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MINERALS") 
end

function minerals_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1369888960
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function chemical()
findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1570439054
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHEMICAL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHEMICAL") 
end

function chemical_daniel() 
findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1570439054
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function texile()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 144394935
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "TEXILE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TEXILE") 
end

function texile_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 144394935
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function glass()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 260292831
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then  s = {{name = "GLASS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GLASS") 
end

function glass_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 260292831
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function animalfeed()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1658060491
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "ANIMAL FEED", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ANIMAL FEED") 
end

function animalfeed_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1658060491
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
 s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function sugar_and_spice()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1807545838
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SUGAR AND SPICE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SUGAR AND SPICE") 
end

function sugar_and_spice_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1807545838
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end


function electriccomp()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -181617693
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "ELECTRIC COMPOMENT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ELECTRIC COMPOMENT") 
end

function electriccomp_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -181617693
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end


function Building_store()   
local zz = {"1. NAIL","2. PLANKS","3. BRICKS","4. CEMENT","5. GLUE ","6. PAINT","7.BUILDING STORE ALL"," 8. OPEN GAME GUARDIAN","9. BACK"," 10. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then nail() 
end 
if z[2] then planks()
end
if z[3] then bricks()
end
if z[4] then cement()
end
if z[5] then glue()
end
if z[6] then paint()
end
if z[7] then building_store_all()
end 
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function building_store_all()
nail() 
planks()
bricks()
cement()
glue()
paint()
end

function Building_store_daniel()   
local zz = {"1. NAILS DANIEL","2. PLANKS DANIEL","3. BRICKS DANIEL","4. CEMENT DANIEL","5. GLUE DANIEL","6. PAINT DANIEL.","7.OPEN GAME GUARDIAN","8. BACK"," 9. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 


if z[1] then nail_daniel()
end

if z[2] then planks_daniel()
end

if z[3] then bricks_daniel()
end

if z[4] then cement_daniel()
end

if z[5] then glue_daniel()
end
if z[6] then paint_daniel()
end 
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end 
if z[9] then exit()
end 
end 
end
end

function nail()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 268207452
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then  
s = {{name = "NAIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL NAIL") 
end

function nail_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 268207452
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function planks()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 351941774
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "PLANKS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PLANKS") 
end

function planks_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 351941774
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end


function bricks()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -188562685
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "BRICKS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BRICKS") 
end

function bricks_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -188562685
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end


function cement()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -164698239
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CEMENT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CEMENT") 
end

function cement_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -164698239
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function glue()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090296690
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GLUE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GLUE") 
end

function glue_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090296690
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function paint()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270579361
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PAINT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PAINT") 
end

function paint_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270579361
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Hardware_store()   
local zz = {"1. HAMMER","2. MEASURING TAPE","3. SHOVEL","4. COOKING UNTENSILS","5. LADDER ","6. DRILL","7. HARDWARE STORE PARTS ","8. OPEN GAME GUARDIAN","9. BACK","10.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then hammer() 
end 
if z[2] then measuring_tape()
end
if z[3] then shovel()
end
if z[4] then cooking_untensils()
end
if z[5] then ladder()
end
if z[6] then drill()
end
if z[7] then Hardware_store_parts()
end
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function Hardware_store_daniel()   
local zz = {"1.  HAMMER DANIEL","2. MEASURING TAPE DANIEL","3. SHOVEL DANIEL","4 COOKING UNTENSILS DANIEL","5. LADDER DANIEL","6. DRILL DANIEL","7. OPEN GAME GUARDIAN","8. BACK","9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then hammer_daniel()
end

if z[2] then measuring_tape_daniel()
end

if z[3] then shovel_daniel()
end

if z[4] then cooking_untensils_daniel()
end

if z[5] then ladder_daniel()
end
if z[6] then drill_daniel() 
end 
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end  
if z[9] then exit()
end 
end 
end
end
function Hardware_store_parts()
hammer() 
measuring_tape()
cooking_untensils()
shovel()
ladder()
drill()
end

function hammer()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 26243455
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "HAMMER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HAMMER") 
end

function hammer_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 26243455
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function measuring_tape_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -297136870
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function measuring_tape()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -297136870
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MEASURING TAPE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MEASURING TAPE") 
end

function shovel_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 465115894
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function shovel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 465115894
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "SHOVEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SHOVEL") 
end

function cooking_untensils_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1799827558
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cooking_untensils()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1799827558
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COOKING UNTENSILS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COOKING UNTENSILS") 
end

function ladder_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 182451793
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function ladder()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 182451793
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "LADDER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LADDER") 
end

function drill_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 256959164
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function drill()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 256959164
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "DRILL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL DRILL") 
end

function Farmers_market()   
local zz = {"1. VEGETABLES","2. FLOURBAG ","3. FRUIT AND BERRIES","4. BEEF","5. CHEESE ","6. CORN","7. CREAM","8. FARMERS MARKET PARTS ","9. OPEN GAME GUARDIAN","10. BACK","11. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then Vegetables() 
end 
if z[2] then Flourbag()
end

if z[3] then fruit_and_berries()
end

if z[4] then beef()
end

if z[5] then cheese()
end

if z[6] then corn()
end

if z[7] then cream()
end

if z[8] then Farmers_market_parts()
end
if z[9]then eigth()
end 
if z[10] then Mainmenu()
end  
if z[11] then exit()
end 
end 
end
end

function Farmers_market_daniel()   
local zz = {"1. VEGETABLES DANIEL","2. FLOURBAG DANIEL","3. FRUIT AND BERRIES DANIEL","4. BEEF DANIEL","5. CHEESE DANIEL","6. CORN DANIEL","7. CREAM DANIEL","8. OPEN GAME GUARDIAN","9. BACK","10. EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then Vegetables_daniel()
end
if z[2] then Flourbag_daniel()
end
if z[3] then fruit_and_berries_daniel()
end
if z[4] then beef_daniel()
end
if z[5] then cheese_daniel()
end
if z[6] then corn_daniel() 
end 
if z[7] then cream_daniel() 
end 
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function Farmers_market_parts()
Vegetables() 
Flourbag()
fruit_and_berries()
beef()
cheese()
corn()
cream()
end

function Vegetables_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1970978713
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Vegetables()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1970978713
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "VEGETABLES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL VEGETABLES") 
end

function Flourbag_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2127979990
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Flourbag()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2127979990
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "FLOURBAG", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FLOURBAG") 
end

function fruit_and_berries_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1447646651
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function fruit_and_berries()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1447646651
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FRUIT AND BERRIES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FRUIT AND BERRIES") 
end

function beef_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090108855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function beef()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090108855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "BEEF", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BEEF") 
end

function cheese_daniel()
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161427822
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cheese()
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161427822
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHEESE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHEESE") 
end

function corn_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090156119
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function corn()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090156119
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CORN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CORN") 
end

function cream_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255768525 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function cream()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255768525 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CREAM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CREAM") 
end

function Furniture_shop()   
local zz = {"1. CHAIRS","2. TABLES ","3. HOME TEXILES","4. COUCH","5. CUPBOARD ","6. FURNITURE PART SHOP","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chairs() 
end 
if z[2] then Tables()
end
if z[3] then Home_texiles()
end
if z[4] then couch()
end
if z[5] then cupboard()
end
if z[6] then Furniture_part_shop()
end
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end  
if z[9] then exit()
end 
end 
end
end

function Furniture_shop_daniel()   
local zz = {"1.  CHAIRS DANIEL","2. TABLES DANIEL","3. HOME TEXILES DANIEL","4. COUCH DANIEL","5. CUPBOARD DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chairs_daniel()
end

if z[2] then Tables_daniel()
end

if z[3] then Home_texiles_daniel()
end

if z[4] then couch_daniel()
end

if z[5] then cupboard_daniel()
end

if z[6]then eigth()
end 
if z[7] then Mainmenu()
end  
if z[8] then exit()
end 
end 
end
end

function Furniture_part_shop()
chairs() 
Tables()
Home_texiles()
couch()
cupboard()
end 

function chairs_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161567233
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function chairs()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -161567233
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHAIRS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHAIRS") 
end

function Tables_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 495471776
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function Tables()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 495471776
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TABLES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TABLES") 
end

function Home_texiles_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1228123200
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function Home_texiles()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1228123200
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "HOME TEXILES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HOME TEXILES") 
end

function couch_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255678199
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function couch()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or 0x2c)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 255678199
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COUCH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COUCH") 
end

function cupboard_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or 0x2c)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 334762709
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cupboard()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 334762709
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CUPBOARD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CUPBOARD") 
end

function gardening_supplystore()   
local zz = {"1. GRASS","2. TREE SAMPLING ","3. GARDEN FURNITURE","4. FIRE PIT","5. GARDEN NOMES ","6. LAWNMOVER","7. GARDENING SUPPLY STORE PARTS","8. OPEN GAME GUARDIAN","9.  BACK"," 10.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then grass() 
end 
if z[2] then tree_sampling()
end
if z[3] then garden_furniture()
end
if z[4] then firepit()
end
if z[5] then garden_nomes()
end
if z[6] then lawnmover()
end
if z[7] then gardening_supply_store_parts()
end
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function gardening_supplystore_daniel()   
local zz = {"1. GRASS DANIEL","2. TREE SAMPLING DANIEL","3.GARDEN FURNITURE DANIEL","4. FIREPIT DANIEL","5. GARDEN NOMES DANIEL","6. LAWNMOVER DANIEL","7.OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then grass_daniel()
end

if z[2] then tree_sampling_daniel()
end

if z[3] then garden_furniture_daniel()
end

if z[4] then firepit_daniel()
end

if z[5] then garden_nomes_daniel()
end

if z[6] then lawnmover_daniel()
end
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end  
if z[9] then exit()
end 
end 
end
end
function gardening_supply_store_parts()
grass() 
tree_sampling()
garden_furniture()
firepit()
garden_nomes()
lawnmover()
end

function grass_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =260508453 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function grass()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =260508453 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GRASS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GRASS") 
end

function tree_sampling_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -788997290
 local s = {} 
for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tree_sampling()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -788997290
 local s = {} 
for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then  
s = {{name = "TREE SAMPLING", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TREE SAMPLING") 
end

function garden_furniture_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1125663546
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function garden_furniture()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1125663546
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GARDEN FURNITURE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GARDEN FURNITURE") 
end

function firepit_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1398164872
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function firepit()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1398164872
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FIRE PIT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FIRE PIT") 
end

function garden_nomes_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 566656095
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function garden_nomes()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 566656095
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GARDEN NOMES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GARDEN NOMES") 
end

function lawnmover_daniel()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1818945505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function lawnmover()
 findCommonItemsPointer() 
common_items = {}; 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1818945505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "LAWNMOVER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LAWNMOVER") 
end
function Donut_shop()   
local zz = {"1. DONUT","2. GREEN SMOOTHIE ","3. BREADROLL","4. CHERRY CHEESECAKE","5. FROZEN YOGURT","6. COFFEE","7. DONUT SHOP ALL","8. OPEN GAME GUARDIAN","9.  BACK"," 10.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then donut() 
end 
if z[2] then green_smoothie()
end
if z[3] then breadroll()
end
if z[4] then cherry_cheesecake()
end
if z[5] then frozen_yogurt()
end
if z[6] then coffee()
end
if z[7] then Donut_shop_all()
end
if z[8]then eigth()
end 
if z[9] then Mainmenu()
end  
if z[10] then exit()
end 
end 
end
end

function Donut_shop_daniel()   
local zz = {"1. DONUT DANIEL","2. GREEN SMOOTHIE DANIEL","3.BREADROLL DANIEL","4. CHERRY CHEESECAKE DANIEL","5. FROZEN YOGURT DANIEL","6. COFFEE DANIEL","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"NANO STORE") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then donut_daniel()
end

if z[2] then green_smoothie_daniel()
end

if z[3] then breadroll_daniel()
end

if z[4] then cherry_cheesecake_daniel()
end

if z[5] then frozen_yogurt_daniel()
end

if z[6] then coffee_daniel()
end
if z[7]then eigth()
end 
if z[8] then Mainmenu()  
end
if z[9] then exit()
end 
end 
end
end

function Donut_shop_all()
donut()
green_smoothie()
breadroll()
cherry_cheesecake()
frozen_yogurt()
coffee()
end

function donut_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-113650078 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function donut()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-113650078 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "DONUT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL DONUT") 
end

function green_smoothie_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1593061790
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function green_smoothie()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1593061790
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GREEN SMOOTHIE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GREEN SMOOTHIE") 
end

function breadroll_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 123794044
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function breadroll()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 123794044
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "BREADROLL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BREADROLL") 
end

function cherry_cheesecake_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -466890509
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cherry_cheesecake()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -466890509
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CHERRY CHEESECAKE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHERRY CHEESECAKE") 
end

function frozen_yogurt_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -325591165
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function frozen_yogurt()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -325591165
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FROZEN YOGURT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FROZEN YOGURT") 
end

function coffee_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -153089811
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function coffee()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -153089811
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COFFEE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COFFEE") 
end


function fashion_shop()   
local zz = {"1. CAP","2. SHOES ","3. WATCH","4. BUSSINESS SUITS","5. BACKPACK ","6.FASHIONSHOP ALL PARTS","7. OPEN GAME GUARDIAN","8. BACK","9. EXIT"} 
local z = gg.multiChoice(zz, nil,"FASHION") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then cap() 
end 
if z[2] then shoes()
end
if z[3] then watch()
end
if z[4] then suits()
end
if z[5] then backpack()
end
if z[6] then Fashionshop_all_parts()
end 
if z[7]then eigth()
end 
if z[8] then Mainmenu()
end 
if z[9] then exit()
end 
end 
end
end

function fashion_shop_daniel()   
local zz = {"1. CAP DANIEL","2. SHOES DANIEL","3. WATCH DANIEL","4. BUSSINESS SUITS DANIEL","5. BACKPACK DANIEL","6. OPEN GAME GUARDIAN","7. BACK","8. EXIT"} 
local z = gg.multiChoice(zz, nil,"FASHION DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then cap_daniel()
end
if z[2] then shoes_daniel()
end
if z[3] then watch_daniel()
end
if z[4] then suits_daniel()
end
if z[5] then backpack_daniel()
end
if z[6]then eigth()
end 
if z[7] then Mainmenu()
end 
if z[8] then exit()
end  
end
end
end

function Fashionshop_all_parts()
cap()
shoes()
watch()
suits()
backpack()
end

function cap_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1534432269
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function cap()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1534432269
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CAP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CAP") 
end

function shoes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274394919
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function shoes()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 274394919
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SHOES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SHOES") 
end

function watch_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1018293267
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function watch()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1018293267
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "WATCH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WATCH") 
end

function suits_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =  -1408194775
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function suits()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1408194775
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SUITS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SUITS") 
end

function backpack_daniel()
findCommonItemsPointer()common_items = {} for i, pointer in ipairs(common_items_pointer.common_items) do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} end gg.loadResults(common_items)local y = gg.getResults(gg.getResultsCount())gg.clearResults() 
local x = 108385717 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD end y = gg.getValues(y) for i in ipairs(y) do 
if y[i].value == x then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}break end end gg.loadResults(s) gg.searchPointer(0)local n = gg.getResults(gg.getResultsCount())gg.clearResults()for i, w in ipairs(n) do w.address = w.address w.flags = gg.TYPE_DWORD end gg.loadResults(n) end

function backpack()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 108385717
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "BACKPACK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BACKPACK") 
end

function fast_food_restaurant()   
local zz = {"1. FRIES","2. PIZZA ","3. HAMBURGER","4. ICE CREAM SANDWICH","5. LEMONADE ","6. POPCORN","7FAST FOOD RESTAURANT PARTS","8.OPEN GAME GUARDIAN","9. BACK"," 10. EXIT"} 
local z = gg.multiChoice(zz, nil,"FAST FOOD RESTAURANT") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fries() 
end 
if z[2] then pizza()
end

if z[3] then hamburger()
end

if z[4] then icecream_sandwich() 
end

if z[5] then lemonade()
end

if z[6] then popcorn()
end

if z[7] then fast_food_restaurant_parts()
end
if z[8]then eigth()
end 
if z[10] then exit()
end 
if z[9] then Mainmenu()
end 
 if zz[9] then Production_daniel()  
end 
end 
end
end

function fast_food_restaurant_daniel()   
local zz = {"1. FRIES DANIEL","2. PIZZA DANIEL","3.HAMBURGER DANIEL","4. ICE CREAM SANDWICH DANIEL","5. LEMONADE DANIEL","6. POPCORN DANIEL","7.OPEN GAME GUARDIAN","8. BACK"," 9. EXIT"} 
local z = gg.multiChoice(zz, nil,"FAST FOOD RESTAURANT DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fries_daniel()
end

if z[2] then pizza_daniel()
end

if z[3] then hamburger_daniel()
end

if z[4] then icecream_sandwich_daniel()
end

if z[5] then lemonade_daniel()
end

if z[6] then popcorn_daniel()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if zz[8] then Production_daniel()  
end 
end 
end
end

function fast_food_restaurant_parts()
fries()
pizza()
hamburger()
icecream_sandwich()
lemonade()
popcorn()
end

function fries_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-719795061 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function fries()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =-719795061 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " FRIES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FRIES") 
end

function pizza_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270885747
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function pizza()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 270885747
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "PIZZA", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PIZZA") 
end

function hamburger_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1799384545
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function hamburger()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1799384545
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "HAMBURGER", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HAMBURGER") 
end

function icecream_sandwich_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -712060721
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function icecream_sandwich()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -712060721
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "ICE CREAM SANDWICH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ICE CREAM SANDWICH") 
end

function lemonade_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -265079577
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 


gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function lemonade()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -265079577
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "LEMONADE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LEMONADE") 
end

function popcorn_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1136019226
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end  
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function popcorn()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1136019226
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "POPCORN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL POPCORN") 
end

function home_appliances()   
local zz = {"1. BBQ GRILL","2. REFRIGERATOR ","3. LIGHTING SYSTEM ","4. TV","5. MICROWAVE OVEN ","6. HOME PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"HOME APPLIANCES") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then BBQ_GRILL() 
end 
if z[2] then REFRIGERATOR()
end

if z[3] then LIGHTING_SYSTEM()
end

if z[4] then TV()
end

if z[5] then MICROWAVE_OVEN()
end

if z[6] then HOME_PARTS()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if zz[8] then Production_daniel()  
end 
end 
end
end

function home_appliances_daniel()   
local zz = {"1. BBQ GRILL DANIEL","2. REFRIGERATOR DANIEL","3. LIGHTING SYSTEM DANIEL","4. TV DANIEL","5. MICROWAVE OVEN DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"HOME APPLIANCES DANIEL") 
if z ~= nil then 
if seven(z) >0 then 


if z[1] then BBQ_GRILL_daniel()
end

if z[2] then REFRIGERATOR_daniel()
end

if z[3] then LIGHTING_SYSTEM_daniel()
end

if z[4] then TV_daniel()
end

if z[5] then MICROWAVE_OVEN_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if z[7] then Production_daniel()  
end 
end 
end
end

function HOME_PARTS()
BBQ_GRILL() 
REFRIGERATOR()
LIGHTING_SYSTEM()
TV()
MICROWAVE_OVEN()
end

function BBQ_GRILL_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1943086388
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function BBQ_GRILL()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1943086388
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "BBQ_GRILL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL IRON") 
end

function REFRIGERATOR_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 298050001
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function REFRIGERATOR()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 298050001
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "REFRIGERATOR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL REFRIGERATOR") 
end

function LIGHTING_SYSTEM_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1494660480
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function LIGHTING_SYSTEM()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1494660480
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "LIGHTING SYSTEM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL LIGHTING SYSTEM") 
end

function TV_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 5863855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function TV()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 5863855
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TV", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TV") 
end

function MICROWAVE_OVEN_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1171629674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function MICROWAVE_OVEN()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1171629674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MICROWAVE OVEN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MICROWAVE OVEN") 
end

function SUNNY_ISLES()   
local zz = {"1. COCONUT","2. COCONUT OIL ","3. FACE CREAM ","4. TROPICAL DRINK","5. SUNNY PARTS","6. OPEN GAME GUARDIAN","7. BACK","8. EXIT"} 
local z = gg.multiChoice(zz, nil,"SUNNY ISLES") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then coconut() 
end 
if z[2] then coconut_oil()
end

if z[3] then face_cream()
end

if z[4] then tropical_drink()
end

if z[5] then SUNNY_PARTS()
end 

if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function SUNNY_ISLES_daniel()   
local zz = {"1. COCONUT","2. COCONUT OIL","3. FACE CREAM ","4. TROPICAL DRINK","5. OPEN GAME GUARDIAN","6. BACK"," 7. EXIT"} 
local z = gg.multiChoice(zz, nil,"SUNNY ISLES DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then coconut_daniel()
end
if z[2] then coconut_oil_daniel()
end
if z[3] then face_cream_daniel()
end
if z[4] then tropical_drink_daniel()
end
if z[5]then eigth()
end 
if z[8] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function SUNNY_PARTS()
coconut()
coconut_oil()
face_cream()
tropical_drink()
end

function coconut_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -760220352
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function coconut()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -760220352
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "COCONUT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COCONUT") 
end

function coconut_oil_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 248304484
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function coconut_oil()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 248304484
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "COCONUT OIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL COCONUT OIL") 
end

function face_cream_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1740539876
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function face_cream()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1740539876
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "FACE CREAM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FACE CREAM") 
end

function tropical_drink_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 449644219
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tropical_drink()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 449644219
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "TROPICAL DRINK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TROPICAL DRINK") 
end

function GREEN_VALLEY()   
local zz = {"1. RECYLCE FABRIC","2. REUSEABLE_BAG ","3. YOGA MATS ","4. TV","5. GREENVALLEY PARTS","6 OPEN GAME GUARDIAN","7. BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"GREEN VALLEY") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then recylce_fabric() 
end 
if z[2] then reuseable_bag()
end
if z[3] then yoga_mats()
end
if z[4] then ecological_shoes()
end
if z[5] then GREENVALLEY_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function GREEN_VALLEY_daniel()   
local zz = {"1. RECYLCE FABRIC DANIEL","2. REUSEABLE BAG DANIEL","3. YOGA MATS DANIEL","4. ECOLOGICAL SHOES DANIEL","5. OPEN GAME GUARDIAN","6. BACK"," 7.EXIT"} 
local z = gg.multiChoice(zz, nil,"GREEN VALLEY DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then recylce_fabric_daniel()
end
if z[2] then reuseable_bag_daniel()
end
if z[3] then yoga_mats_daniel()
end
if z[4] then ecological_shoes_daniel()
end
if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function GREENVALLEY_PARTS()
recylce_fabric()
reuseable_bag()
yoga_mats()
ecological_shoes()
end

function recylce_fabric_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1480795913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function recylce_fabric()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1480795913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "RECYLCE FABRIC", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL RECYLCE FABRIC") 
end

function reuseable_bag_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1553334434
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function reuseable_bag()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1553334434
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "REUSEABLE BAG", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL REUSEABLE BAG") 
end

function yoga_mats_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1886510007
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function yoga_mats()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1886510007
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "YOGA MATS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL YOGA MATS") 
end

function ecological_shoes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2118495682
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function ecological_shoes()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2118495682
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "ECOLOGICAL SHOES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ECOLOGICAL SHOES") 
end

function CACTUS_CANYON()   
local zz = {"1. CRUDE OIL","2. MOTOR OIL ","3. CAR WHEEL ","4. ENGINE","5. CACTUS_PARTS","6. OPEN GAME GUARDIAN","7.  BACK"," 8 .EXIT"} 
local z = gg.multiChoice(zz, nil,"CACTUS CANYON") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crude_oil() 
end 
if z[2] then motor_oil()
end
if z[3] then car_wheel()
end
if z[4] then engine()
end
if z[5] then CACTUS_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function CACTUS_CANYON_daniel()   
local zz = {"1. CRUDE OIL DANIEL","2. MOTOR_OIL DANIEL","3. CAR WHEEL DANIEL","4. ENGINE  DANIEL","5. OPEN GAME GUARDIAN","6. BACK"," 7.EXIT"} 
local z = gg.multiChoice(zz, nil,"CACTUS CANYON DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crude_oil_daniel()
end
if z[2] then motor_oil_daniel()
end

if z[3] then car_wheel_daniel()
end

if z[4] then engine_daniel()
end

if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function CACTUS_PARTS()
crude_oil() 
motor_oil()
car_wheel()
engine()
end

function crude_oil_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 953030492
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function crude_oil()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 953030492
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CRUDE OIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CRUDE OIL") 
end

function motor_oil_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1964329030
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function motor_oil()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1964329030
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "MOTOR OIL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL MOTOR OIL") 
end

function car_wheel_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1290152913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function car_wheel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1290152913
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CAR WHEEL", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CAR WHEEL") 
end

function engine_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -75965445
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function engine()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -75965445
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "ENGINE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ENGINE") 
end

function FROZEN_FJORD()   
local zz = {"1. FISH","2. CANNED FISH ","3. FISH SOUP ","4. SALMON SANDWICH","5. FROSTY PARTS","6. OPEN GAME GUARDIAN","11.  BACK"," 12.EXIT"} 
local z = gg.multiChoice(zz, nil,"FROZEN FJORD") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fish() 
end 
if z[2] then canned_fish()
end
if z[3] then fish_soup()
end
if z[4] then salmon_sandwich()
end
if z[5] then FROSTY_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function FROZEN_FJORD_daniel()   
local zz = {"1. FISH DANIEL","2. CANNED FISH  DANIEL","3. FISH SOUP DANIEL","4. SALMON SANDWICH DANIEL","5. OPEN GAME GUARDIAN","6. BACK","7. EXIT"} 
local z = gg.multiChoice(zz, nil,"FROZEN FJORD DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then fish_daniel()
end
if z[2] then canned_fish_daniel()
end
if z[3] then fish_soup_daniel()
end
if z[4] then salmon_sandwich_daniel()
end
if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function FROSTY_PARTS()
fish() 
canned_fish()
fish_soup()
salmon_sandwich()
end

function fish_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090257423
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function fish()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090257423
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "FISH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FISH") 
end

function canned_fish_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1939782264
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function canned_fish()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1939782264
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CANNED FISH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CANNED FISH") 
end

function fish_soup_daniel()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1148007126
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function fish_soup()
 findCommonItemsPointer() 
common_items = {};
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1148007126
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{name = "FISH SOUP", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FISH SOUP") 
end


function salmon_sandwich_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1321484032
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function salmon_sandwich()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1321484032
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SALMON SANDWICH", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SALMON SANDWICH") 
end

function LIMESTONE_CLIFF()   
local zz = {"1. SILK","2. FAN ","3. ROBE ","4. STRING","5. LIMESTONE CLIFF PARTS","6.OPEN GAME GUARDIAN","7. BACK","8. EXIT "} 
local z = gg.multiChoice(zz, nil,"LIMESTONE CLIFF") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then silk()  
end 
if z[2] then fan()
end
if z[3] then robe()
end
if z[4] then string()
end
if z[5] then LIMESTONE_CLIFF_PARTS()
end
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Production_submenu()
end 
 if zz[7] then Production_submenu()  
end 
end 
end
end

function LIMESTONE_CLIFF_daniel()   
local zz = {"1.SILK","2. FAN DANIEL","3. ROBE DANIEL","4. STRING DANIEL","5. OPEN GAME GUARDAIN","6. BACK"," 7. EXIT"} 
local z = gg.multiChoice(zz, nil,"LIMESTONE CLIFF DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then silk_daniel()
end
if z[2] then fan_daniel()
end
if z[3] then robe_daniel()
end
if z[4] then string_daniel()
end
if z[5]then eigth()
end 
if z[7] then exit()
end 
if z[6] then Production_submenu()
end 
 if zz[6] then Production_submenu()  
end 
end 
end
end

function LIMESTONE_CLIFF_PARTS()
silk() 
fan()
robe()
string()
end

function silk_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090724376
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function silk()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090724376
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "SILK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL SILK") 
end

function fan_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 193491386
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
os.exit()
end

function fan()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 193491386
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "FAN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FAN") 
end

function robe_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090694637
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function robe()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090694637
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "ROBE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL ROBE") 
end

function string_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 479440892
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function string()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 479440892
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "STRING", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL STRING") 
end

function burocrate_building()   
local zz = {"1. CRAVE WOOD","2. WROUGTH IRON","3. CHISSELED STONE","4. STAIN GLASS","5. TAPESTRY ","6. BUROCRATE BUILDING PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"BUROCRATE BUILDING") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crave_wood() 
end 
if z[2] then wrougth_iron()
end
if z[3] then chisseled_stone()
end
if z[4] then  stain_glass()
end

if z[5] then tapestry()
end

if z[6] then burocrate_building_parts()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function burocrate_building_daniel()   
local zz = {"1. CRAVE WOOD DANIEL","2. WROUGTH IRON DANIEL","3. CHISSELED STONE DANIEL","4. STAIN GLASS DANIEL","5. TAPESTRY DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"BUROCRATE BUILDING DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then crave_wood_daniel()
end
if z[2] then wrougth_iron_daniel()
end
if z[3] then chisseled_stone_daniel()
end
if z[4] then stain_glass_daniel()
end
if z[5] then tapestry_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function burocrate_building_parts()
crave_wood() 
wrougth_iron()
chisseled_stone()
stain_glass()
tapestry()
end

function crave_wood_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1937678477
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function crave_wood()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1937678477
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CRAVE WOOD", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CRAVE WOOD") 
end

function wrougth_iron_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 636979469
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function wrougth_iron() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 636979469
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "WROUGTH IRON", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WROUGTH IRON") 
end

function chisseled_stone_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1990081263
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function chisseled_stone()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1990081263
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CHISSELED STONE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHISSELED STONE") 
end

function stain_glass_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -422625305
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function stain_glass()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -422625305
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "STAIN GLASS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL STAIN GLASS") 
end

function tapestry_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1057013087
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tapestry()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1057013087
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TAPESTRY", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TAPESTRY") 
end

function santa_shop()
local zz = {"1. TOY HORSE","2. HOLIDAY DECORATIONS","3. CANDY CANE","4. GINGERBEARD MAN","5. HOLIDAY ORNAMENTS ","6. SANTA SHOP PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"SANTA SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then toy_horse() 
end 
if z[2] then holiday_decorations()
end
if z[3] then candy_cane()
end
if z[4] then  gingerbeard_man()
end

if z[5] then holiday_ornaments()
end

if z[6] then santa_shop_parts()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function santa_shop_daniel()
local zz = {"1. TOY HORSE DANIEL","2.  HOLIDAY DECORATIONS DANIEL","3. CANDY CANE DANIEL","4. GINGERBEARD MAN DANIEL","5. HOLIDAY ORNAMENTS DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"SANTA SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then toy_horse_daniel()
end
if z[2] then  holiday_decorations_daniel()
end
if z[3] then candy_cane_daniel()
end
if z[4] then gingerbeard_man_daniel()
end
if z[5] then holiday_ornaments_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function santa_shop_parts()
toy_horse() 
holiday_decorations()
candy_cane()
gingerbeard_man()
holiday_ornaments()
end

function toy_horse_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =2090767284
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function toy_horse()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2090767284
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TOY HORSE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TOY HORSE") 
end

function holiday_decorations_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 614594674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function holiday_decorations() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 614594674
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " HOLIDAY DECORATIONS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL  HOLIDAY DECORATIONS") 
end

function candy_cane_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2000852277
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function candy_cane()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -2000852277
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "CANDY CANE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CANDY CANE") 
end

function gingerbeard_man_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -942334081
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function gingerbeard_man()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -942334081
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "GINGERBEARD MAN", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL GINGERBEARD MAN") 
end

function holiday_ornaments_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1661902171
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function holiday_ornaments()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =1661902171
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "HOLIDAY ORNAMENTS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL HOLIDAY ORNAMENTS") 
end

function sport_shop_building()
local zz = {"1. TENNIS RACKET","2. SPORTS DRINK ","3. FOOTBALL SHOES","4. PROTEIN BAR","5. PING PONG TABLE ","6. SPORT SHOP BUILDING PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"SPORT SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then tennis_racket() 
end 
if z[2] then sports_drink()
end
if z[3] then football_shoes()
end
if z[4] then  protein_bar()
end

if z[5] then ping_pong_table()
end
if z[6] then sport_shop_building_part()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function sport_shop_building_daniel()
local zz = {"1. TENNIS RACKET DANIEL","2.  SPORTS DRINK DANIEL","3. FOOTBALL SHOES DANIEL","4. PROTEIN BAR DANIEL","5. PING PONG TABLE DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"SPORT SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then tennis_racket_daniel()
end
if z[2] then  sports_drink_daniel()
end
if z[3] then football_shoes_daniel()
end
if z[4] then protein_bar_daniel()
end
if z[5] then ping_pong_table_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function sport_shop_building_part()
tennis_racket() 
sports_drink()
football_shoes()
protein_bar()
ping_pong_table()
end

function tennis_racket_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =2062064496
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function tennis_racket()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 2062064496
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "TENNIS RACKET", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL TENNIS RACKET") 
end

function sports_drink_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1156262088
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function sports_drink() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1156262088
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " SPORTS DRINK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL  SPORTS DRINK") 
end

function football_shoes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1846238891 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function football_shoes()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1846238891
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "FOOTBALL SHOES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FOOTBALL SHOES") 
end

function protein_bar_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 518625563
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function protein_bar()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 518625563
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PROTEIN BAR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PROTEIN BAR") 
end

function ping_pong_table_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1683538769
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function ping_pong_table()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1683538769
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PING PONG TABLE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PING PONG TABLE") 
end

function chocolate_shop()
local zz = {"1. CHOCLATE BAR","2. JELLY BEANS ","3. EASTER BASKET","4. CHOCOLATE EGG","5. FRUIT CAKE ","6. CHOCLATE SHOP PARTS","7. OPEN GAME GUARDIAN","8.  BACK"," 9.EXIT"} 
local z = gg.multiChoice(zz, nil,"CHOCOLATE SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chocolate_bar() 
end 
if z[2] then jelly_beans()
end
if z[3] then easter_basket()
end
if z[4] then  chocolate_egg()
end
if z[5] then fruit_cake()
end
if z[6] then choclate_shop_parts()
end
if z[7]then eigth()
end 
if z[9] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function chocolate_shop_daniel()
local zz = {"1. CHOCOLATE BAR DANIEL","2.  JELLY BEANS DANIEL","3. EASTER BASKET DANIEL","4. CHOCOLATE EGG DANIEL","5. FRUIT CAKE DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"CHOCOLATE SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then chocolate_bar_daniel()
end
if z[2] then  jelly_beans_daniel()
end
if z[3] then easter_basket_daniel()
end
if z[4] then chocolate_egg_daniel()
end
if z[5] then fruit_cake_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function choclate_shop_parts()
chocolate_bar() 
jelly_beans()
easter_basket()
chocolate_egg()
fruit_cake()
end

function chocolate_bar_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x =367764140
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function chocolate_bar()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 367764140
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CHOCOLATE BAR", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHOCOLATE BAR") 
end

function jelly_beans_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 501522350
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function jelly_beans() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 501522350
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = " JELLY BEANS", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL  JELLY BEANS") 
end

function easter_basket_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 856126755 
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end  

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function easter_basket()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 856126755
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "EASTER BASKET", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL EASTER BASKET") 
end

function chocolate_egg_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 367767594
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function chocolate_egg()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 367767594
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "CHOCOLATE EGG", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL CHOCOLATE EGG") 
end

function fruit_cake_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1128736189
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function fruit_cake()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1128736189
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FRUIT CAKE", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FRUIT CAKE") 
end

function farmer_shop_daniel()   
local zz = {"1. FARMER'S HAY FORK DANIEL","2. BOX OF GRAPES DANIEL","3. WOOL SHIRT DANIEL","4. PICKNIC BASKET DANIEL","5. APPLE JAM DANIEL","6. OPEN GAME GUARDIAN","7.  BACK"," 8.EXIT"} 
local z = gg.multiChoice(zz, nil,"FARMER SHOP DANIEL") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then farmershayfork_daniel()
end
if z[2] then box_of_grapes_daniel()
end
if z[3] then wool_shirt_daniel()
end
if z[4] then picknic_basket_daniel()
end
if z[5] then apple_jam_daniel()
end 
if z[6]then eigth()
end 
if z[8] then exit()
end 
if z[7] then Mainmenu()
end 
 if zz[7] then Production_daniel()  
end 
end 
end
end

function farmer_shop()   
local zz = {"1. FARMER'S HAY FORK ","2. BOX OF GRAPES ","3. WOOL SHIRT ","4. PICKNIC BASKET ","5. APPLE JAM ","6. FARMER SHOP ALL","7. OPEN GAME GUARDIAN","8.  BACK"," 9. EXIT"} 
local z = gg.multiChoice(zz, nil,"FARMER SHOP") 
if z ~= nil then 
if seven(z) >0 then 
if z[1] then farmershayfork()
end
if z[2] then box_of_grapes()
end
if z[3] then wool_shirt()
end
if z[4] then picknic_basket()
end
if z[5] then apple_jam()
end 
if z[6] then farmers_shop_parts()
end
if z[7]then eigth()
end 
if z[8] then exit()
end 
if z[8] then Mainmenu()
end 
 if z[8] then Production_daniel()  
end 
end 
end
end

function farmers_shop_parts()
farmershayfork()
box_of_grapes()
wool_shirt()
picknic_basket()
apple_jam()
end

function farmershayfork_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 880024505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function farmershayfork()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 880024505
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "FARMER'S HAY FORK", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL FARMER'S HAY FORK") 
end

function box_of_grapes_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1754918885
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 
gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function box_of_grapes() 
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = 1754918885
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "BOX OF GRAPES", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL BOX OF GRAPES") 
end

function wool_shirt_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -313937296
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end
   
function wool_shirt()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -313937296
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then
s = {{name = "WOOL SHIRT", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL WOOL SHIRT") 
end

function picknic_basket_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1423167883
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n)
end

function picknic_basket()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1423167883
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "PICKNIC BASKET", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL PICKNIC BASKET") 
end

function apple_jam_daniel()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1153640785
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then s = {{flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
 break 
end 
end 

gg.loadResults(s) 
gg.searchPointer(0)
 local n = gg.getResults(gg.getResultsCount())
 gg.clearResults()
 for i, w in ipairs(n) 
do w.address = w.address w.flags = gg.TYPE_DWORD
 end 
gg.loadResults(n) 
end

function apple_jam()
 findCommonItemsPointer() 
common_items = {} 
for i, pointer in ipairs(common_items_pointer.common_items) 
do common_items[#common_items + 1] = {flags = gg.TYPE_DWORD, address = pointer.address + (informations.x64 and offset_normal_parts_64bit or offset_normal_parts_32bit)} 
end 
gg.loadResults(common_items)
 local y = gg.getResults(gg.getResultsCount())
 gg.clearResults() 
local x = -1153640785
 local s = {} for i in ipairs(y) do y[i].address = y[i].address y[i].flags = gg.TYPE_DWORD 
end 
y = gg.getValues(y) for i in ipairs(y) do if y[i].value == x 
then 
s = {{name = "APPLE JAM", flags = gg.TYPE_DWORD, address = y[i].address + (informations.x64 and -offset_normal_parts_64bit or -offset_normal_parts_32bit)}}
break
 end 
end
gg.addListItems(s) 
gg.toast(" SUCCESSFULL APPLE JAM") 
end


function exit() 
gg.setVisible(false)
os.exit() 
end 

function exit() 
gg.setVisible(false) 
os.exit()
end 

while true do 
if gg.isVisible() then
 zzz = true
 gg.setVisible(false)
 end  
if zzz then 
Mainmenu() eigth()
end 
gg.sleep(100) 
end
if gg.gg.setVisible(true) then 
return zzz
end  
